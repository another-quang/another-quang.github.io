{"version":3,"sources":["components/Globe/MyGlobe.js","components/Globe/Globe.js","components/AthleteList/AthleteCard.js","components/AthleteList/AthleteDetailCard.js","components/AthleteList/AthleteList.js","components/App.js","containers/AppContainer.js","actions/index.js","constants/ActionTypes.js","serviceWorker.js","reducers/phaseResults.js","reducers/selectedResult.js","reducers/globeStatus.js","reducers/index.js","store/configureStore.js","index.js"],"names":["MyGlobe","Object","classCallCheck","this","renderer","THREE","scene","container","camera","object","controls","fov","altitude","globeProps","globeRadius","widthSegments","heightSegments","globeGroup","_this2","_this","document","getElementById","WIDTH","clientWidth","HEIGHT","clientHeight","setSize","position","set","lookAt","OrbitControls","autoRotate","autoRotateSpeed","background","add","appendChild","domElement","ambientLight","spotLight","load","texture","sphere","material","map","mesh","animate","requestAnimationFrame","TWEEN","update","render","globeStatus","spinning","selectedResult","geojson","_selectedResult$geojs","lat","lng","target","calculate3dCoordinates","coeff","from","x","y","z","to","easing","Quartic","Out","onUpdate","start","phaseResults","forEach","element","result","circleGeometry","medalColor","n_RankMedal","circleMaterial","color","radius","phi","Math","PI","theta","sin","cos","latitude","longitude","azimuthal","polar","Globe","props","possibleConstructorReturn","getPrototypeOf","call","myGlobe","react_default","a","createElement","id","_this$props","updatePhaseResults","rotateCamera","applyStatus","init","Component","AthleteCard","onClick","formattedDate","format","parse","d_PhaseDate","name","c_Person","concat","c_Team","medal","className","e","preventDefault","class","c_EventGender","c_Sportname","c_CompetitionName","c_PhaseCity","c_PhaseCountry","AthleteDetailCard","state","c_Result","c_ResultType","n_PersonAgeYears","AthleteList","viewDetails","onSelectResult","setGlobeStatus","setState","_this$props2","athleteCards","r","components_AthleteList_AthleteCard","key","n_PhaseResultID","onClickAthleteCard","heading","length","cssClass","components_AthleteList_AthleteDetailCard","onCloseDetail","App","loaded","fetchApscData","components_Globe_Globe","components_AthleteList_AthleteList","AppContainer","connect","dispatch","type","fetch","then","response","json","results","slice","countries","find","c","Country","push","assign","receiveApscData","onYearChange","selectedYear","selectYear","newStatus","Boolean","window","location","hostname","match","initialState","arguments","undefined","action","rootReducer","combineReducers","middlewares","thunk","promise","store","createStore","applyMiddleware","apply","es","containers_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63c907c7.chunk.js","sourcesContent":["import * as THREE from 'three'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport OrbitControls from 'threejs-orbit-controls'\n\nclass MyGlobe {\n\tconstructor() {\n\t\tthis.renderer = new THREE.WebGLRenderer()\n\t\tthis.scene = new THREE.Scene()\n\t\t// this.containerId = containerId || \"my-globe\"\n\t\tthis.container = null\n\t\tthis.camera = {\n\t\t\tobject: null, // camera object\n\t\t\tcontrols: null, // orbitControls object\n\t\t\tfov: 60,\n\t\t\taltitude: 500\n\t\t}\n\n\t\tthis.globeProps = {\n\t\t\tglobeRadius: 200,\n\t\t\twidthSegments: 50,\n\t\t\theightSegments: 50\n\t\t}\n\t\tthis.globeGroup = new THREE.Group()\n\t}\n\n\tinit() {\n\t\tconst _this = this\n\t\tthis.container = document.getElementById(\"my-globe\")\n\t\tconst WIDTH = this.container.clientWidth\n\t\tconst HEIGHT = this.container.clientHeight\n\n\t\t/** Renderer */\n\t\tthis.renderer.setSize(WIDTH, HEIGHT)\n\n\t\t/** Camera */\n\t\tthis.camera.object = new THREE.PerspectiveCamera(this.camera.fov, WIDTH / HEIGHT, 1, 10000)\n\t\tthis.camera.object.position.set(0, 200, this.camera.altitude)\n\t\tthis.camera.object.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.camera.controls = new OrbitControls(this.camera.object, this.container)\n\t\tthis.camera.controls.autoRotate = true\n\t\tthis.camera.controls.autoRotateSpeed = .5\n\t\t// this.camera.controls.enableZoom = false\n\n\t\t/** Scene */\n\t\tthis.scene.background = new THREE.Color( 0x000 )\n\t\tthis.scene.add(this.camera.object)\n\t\tthis.container.appendChild(this.renderer.domElement)\n\n\t\t/** Lighting */\n\t\tconst ambientLight = new THREE.AmbientLight(0x404040)\n\t\tthis.scene.add(ambientLight)\n\t\tconst spotLight = new THREE.PointLight(0xffffff);\n\t\tspotLight.position.set(500, 500, 500);\n\t\tthis.camera.object.add(spotLight);\n\n\t\t/** Objects in scene */\n\t\tconst loader = new THREE.TextureLoader()\n\t\tloader.load( '/build/assets/day_2048.jpg', texture => {\n\t\t\tconst sphere = new THREE.SphereGeometry(this.globeProps.globeRadius, this.globeProps.widthSegments, this.globeProps.heightSegments)\n\t\t\tconst material = new THREE.MeshLambertMaterial({\n\t\t\t\tmap: texture\n\t\t\t})\n\t\t\tconst mesh = new THREE.Mesh(sphere, material)\n\t\t\tthis.globeGroup.add(mesh)\n\t\t})\n\t\tthis.scene.add(this.globeGroup)\n\n\t\t// this.globeGroup.add(new THREE.AxesHelper(1000))\n\t\t// this.globeGroup.add(new THREE.GridHelper(1000, 10, 0x0000ff, 0x808080))\n\n\t\t/** Animation */\n\t\tfunction animate () {\n\t\t\trequestAnimationFrame(animate);\n\t\t\tTWEEN.update()\n\t\t\t_this.camera.controls.update()\n\t\t\t_this.renderer.render(_this.scene, _this.camera.object);\n\t\t}\n\t\tanimate();\n\t}\n\n\tapplyStatus(globeStatus) {\n\t\tthis.camera.controls.autoRotate = globeStatus.spinning\n\t}\n\n\trotateCamera(selectedResult) {\n\t\tif (typeof(selectedResult.geojson) !== 'undefined') {\n\t\t\tconst _this = this\n\t\t\tthis.camera.controls.autoRotate = false\n\n\t\t\tconst { lat, lng } = selectedResult.geojson\n\t\t\tconst target = this.calculate3dCoordinates(lat, lng)\n\n\t\t\tconst coeff = this.camera.altitude / this.globeProps.globeRadius\n\t\t\tlet from = {\n\t\t\t\tx: this.camera.object.position.x,\n\t\t\t\ty: this.camera.object.position.y,\n\t\t\t\tz: this.camera.object.position.z\n\t\t\t}\n\n\t\t\tconst to = {\n\t\t\t\tx: target.x * coeff,\n\t\t\t\ty: target.y * coeff,\n\t\t\t\tz: target.z * coeff,\n\t\t\t}\n\n\t\t\tconst tween = new TWEEN.Tween(from)\n\t\t\t\t.to(to, 3000)\n\t\t\t\t.easing(TWEEN.Easing.Quartic.Out)\n\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t_this.camera.object.position.set(from.x, from.y, from.z);\n\t\t\t\t\t_this.camera.object.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\t\t})\n\t\t\t\t.start()\n\t\t}\n\t}\n\n\tupdatePhaseResults(phaseResults) {\n\t\tvar _this = this\n\t\tphaseResults.forEach(element => {\n\t\t\tif (typeof(element.geojson) !== 'undefined'){\n\t\t\t\tconst result = _this.calculate3dCoordinates(element.geojson.lat, element.geojson.lng)\n\t\t\t\tconst circleGeometry = new THREE.SphereGeometry(2, 20, 20)\n\t\t\t\tconst medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\t\t\tconst circleMaterial = new THREE.MeshLambertMaterial({\n\t\t\t\t\tcolor: medalColor\n\t\t\t\t})\n\t\t\t\tconst mesh = new THREE.Mesh(circleGeometry, circleMaterial)\n\t\t\t\tmesh.position.set(result.x, result.y, result.z)\n\t\t\t\t_this.globeGroup.add(mesh)\n\t\t\t}\n\t\t})\n\t}\n\n\tcalculate3dCoordinates(lat, lng) {\n\t\tconst radius = this.globeProps.globeRadius\n\t\tconst phi   = (90-lat)*(Math.PI/180)\n\t\tconst theta = (lng+180)*(Math.PI/180)\n\t\tconst x = -((radius) * Math.sin(phi)*Math.cos(theta))\n\t\tconst z = ((radius) * Math.sin(phi)*Math.sin(theta))\n\t\tconst y = ((radius) * Math.cos(phi));\n\n\t\treturn {x: x, y: y, z: z};\n\t}\n\n\t// Returns an object of the azimuthal and polar angles of a given map latitude and longitude\n\treturnCameraAngles(latitude, longitude) {\n\n\t\tconst resetLongitude =  1.5 * Math.PI\n\t\tlet targetAzimuthalAngle = resetLongitude + longitude / (-180) * Math.PI\n\t\t// if (longitude >= 0) {\n\t\t// \ttargetAzimuthalAngle = resetLongitude + longitude / (-180) * Math.PI\n\t\t\t// targetAzimuthalAngle = resetLongitude + (180 - longitude) / 180 * Math.PI + Math.PI\n\t\t// } else if (longitude < 90 && longitude >= 0) {\n\t\t// } else {\n\t\t// \ttargetAzimuthalAngle = resetLongitude + longitude / (-180) * Math.PI\n\t\t// }\n\n\t\tconst targetPolarAngle = latitude / 180 * Math.PI\n\n\t\treturn {\n\t\t\tazimuthal: targetAzimuthalAngle,\n\t\t\tpolar: targetPolarAngle\n\t\t};\n\t}\n}\n\nexport default MyGlobe","import React, { Component } from 'react'\nimport MyGlobe from './MyGlobe'\nimport './Globe.scss'\n\nclass Globe extends Component {\n  constructor(props) {\n    super(props);\n    this.myGlobe = new MyGlobe()\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"my-globe\"></div>\n      </div>\n    );\n  }\n\n  componentDidUpdate() {\n    const { phaseResults, selectedResult, globeStatus } = this.props\n    this.myGlobe.updatePhaseResults(phaseResults)\n    if (globeStatus.spinning === false) {\n      this.myGlobe.rotateCamera(selectedResult)\n    }\n    this.myGlobe.applyStatus(globeStatus)\n  }\n\n  componentDidMount() {\n    this.myGlobe.init()\n  }\n}\n\nexport default Globe;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteCard.scss'\n\nclass AthleteCard extends Component {\n  render() {\n    const { result, onClick } = this.props\n    const formattedDate = format(parse(result.d_PhaseDate), 'D MMMM YYYY')\n    const name = result.c_Person === null ? `Team ${result.c_Team}` : result.c_Person\n    const medal = result.n_RankMedal === 1 ? \"🥇\" : (result.n_RankMedal === 2 ? \"🥈\" : (result.n_RankMedal === 3 ? \"🥉\" : result.n_RankMedal))\n    // const lng = result.geojson ? result.geojson.lng : \"\"\n    // const lat = result.geojson ? result.geojson.lat : \"\"\n    return (\n      <div className=\"athlete--card media rounded mb-3 p-2 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h5 className=\"mt-0\">{medal} {name}</h5>\n          <p class=\"mb-0\">\n            {result.c_EventGender} { result.c_Sportname}, {result.c_CompetitionName}<br/>\n            <small class=\"text-muted\">\n              {result.c_PhaseCity} {result.c_PhaseCountry}<br/>\n              {formattedDate}<br/>\n            </small>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteCard;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteDetailCard.scss'\n\nclass AthleteDetailCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {  }\n  }\n  render() {\n    const { selectedResult, onClick } = this.props\n    const formattedDate = format(parse(selectedResult.d_PhaseDate), 'D MMMM YYYY')\n    const name = selectedResult.c_Person === null ? `Team ${selectedResult.c_Team}` : selectedResult.c_Person\n    const medal = selectedResult.n_RankMedal === 1 ? \"🥇\" : (selectedResult.n_RankMedal === 2 ? \"🥈\" : (selectedResult.n_RankMedal === 3 ? \"🥉\" : selectedResult.n_RankMedal))\n    const result = selectedResult.c_Result !== null ? (<div><dt>Result ({selectedResult.c_ResultType})</dt><dd>{selectedResult.c_Result}</dd></div>) : null\n    return (\n      <div className=\"athlete--detail--card media rounded mb-3 p-3 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h3 className=\"my-3\">{name}</h3>\n          <dl>\n            <dt>Rank</dt>\n            <dd class=\"display-4\">{medal}</dd>\n            <dt>Sport</dt>\n            <dd>{selectedResult.c_EventGender} { selectedResult.c_Sportname}</dd>\n            <dt>Date</dt>\n            <dd>{formattedDate} {selectedResult.n_PersonAgeYears ? `(${selectedResult.n_PersonAgeYears} years old)` : ''}</dd>\n            <dt>Competition</dt>\n            <dd>{selectedResult.c_CompetitionName}</dd>\n            <dt>Location</dt>\n            <dd>{selectedResult.c_PhaseCity} {selectedResult.c_PhaseCountry}</dd>\n            {result}\n          </dl>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteDetailCard","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport AthleteCard from './AthleteCard'\nimport AthleteDetailCard from './AthleteDetailCard'\nimport './AthleteList.scss'\n\nclass AthleteList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewDetails: false\n    }\n  }\n\n  onClickAthleteCard(result) {\n    const { onSelectResult, setGlobeStatus } = this.props\n    this.setState({ viewDetails: true })\n    onSelectResult(result)\n    setGlobeStatus({ spinning: false })\n  }\n\n  onCloseDetail() {\n    const { setGlobeStatus } = this.props\n    this.setState({ viewDetails: false })\n    setGlobeStatus({ spinning: true })\n  }\n\n  render() {\n    const _this = this\n    const { phaseResults, selectedResult } = this.props\n    const athleteCards = phaseResults.map( r => <AthleteCard key={r.n_PhaseResultID} result={r} onClick={() => _this.onClickAthleteCard(r)} /> )\n    const heading = phaseResults.length > 0 ? `${phaseResults.length} results` : 'Loading ...'\n\n    const cssClass = this.state.viewDetails ? 'athlete--list--container athlete--list--container__detailed' : 'athlete--list--container'\n    return (\n      <div className={cssClass}>\n        <div className=\"athlete--list p-3\">\n          <h3 className=\"my-3\">{heading}</h3>\n          {athleteCards}\n        </div>\n        <AthleteDetailCard selectedResult={selectedResult} onClick={() => _this.onCloseDetail()} />\n      </div>\n    );\n  }\n}\n\nAthleteList.propTypes = {\n  phaseResults: PropTypes.array.isRequired\n}\n\nexport default AthleteList","import React, { Component } from 'react'\nimport Globe from './Globe/Globe'\nimport AthleteList from './AthleteList/AthleteList'\nimport '../vendors/stylesheets/bootstrap/bootstrap.scss'\nimport './App.scss'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.loaded === false) {\n      this.props.fetchApscData()\n      this.setState({ loaded: true })\n    }\n  }\n\n  render() {\n    const { phaseResults, selectedResult, onSelectResult, globeStatus, setGlobeStatus } = this.props\n    return (\n      <div className=\"container-fluid p-0\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-sm-9 col-lg-10\">\n            <Globe phaseResults={phaseResults} selectedResult={selectedResult} globeStatus={globeStatus} />\n          </div>\n          <div className=\"col-sm-3 col-lg-2\">\n            <AthleteList phaseResults={phaseResults} selectedResult={selectedResult} onSelectResult={onSelectResult} setGlobeStatus={setGlobeStatus}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { fetchApscData, selectYear, selectResult, setGlobeStatus } from '../actions';\nimport App from '../components/App';\n\n// const filterStatsByYear = (data, year, metricArray) => {\n//   const filteredData = {};\n//   _.each(metricArray, metricName => {\n//     if (data.hasOwnProperty(metricName)) {\n//       filteredData[metricName] = data[metricName].filter(d => d.year === year);\n//     }\n//   });\n\n//   return Object.assign({}, data, filteredData);\n// };\n\n// const getAvailableYears = (data) => {\n//   if (data.hasOwnProperty('gender')) {\n//     const grouped = _.groupBy(data.gender, 'year');\n//     return Object.keys(grouped).sort().reverse();\n//   }\n//   return [];\n// };\n\nconst mapStateToProps = state => {\n  return {\n    phaseResults: state.phaseResults,\n    selectedResult: state.selectedResult,\n    globeStatus: state.globeStatus\n    // sections: state.sections,\n    // apscData: filterStatsByYear(state.apscData, state.selectedYear, ['classification', 'gender', 'age']),\n    // selectedYear: state.selectedYear,\n    // availableYears: getAvailableYears(state.apscData)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApscData: () => {\n      dispatch(fetchApscData());\n    },\n    onYearChange: selectedYear => {\n      dispatch(selectYear(selectedYear));\n    },\n    onSelectResult: result => {\n      dispatch(selectResult(result))\n    },\n    setGlobeStatus: newStatus => {\n      dispatch(setGlobeStatus(newStatus))\n    }\n  };\n};\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default AppContainer;\n","import fetch from 'isomorphic-fetch'\nimport * as types from '../constants/ActionTypes'\nimport countries from '../assets/data/countries.json'\n// import cities from 'cities.json'\n\nexport const searchTerm = (text) => ({\n  type: types.SEARCH_TERM,\n  text\n})\n\nexport const showSection = (sectionName) => ({\n  type: types.SHOW_SECTION,\n  sectionName\n})\n\nexport const requestApscData = () => ({\n  type: types.REQUEST_APSC_DATA,\n})\n\nexport const receiveApscData = (json) => ({\n  type: types.RECEIVE_APSC_DATA,\n  json\n})\n\nexport const fetchApscData = () => {\n  const requestUrl = `/build/assets/phaseresults.json`;\n  return dispatch => {\n    dispatch(requestApscData());\n    return fetch(requestUrl)\n      .then(response => {\n        return response.json()\n      })\n      .then(json => {\n        const results = [];\n        if (json.length > 5) {\n          const subset = json.slice(0, 20)\n          subset.forEach(r => {\n            const geojson = countries.find(c => c.Country === r.c_PhaseCountry)\n            results.push(Object.assign({}, r, { geojson: geojson }));\n          })\n        }\n        dispatch(receiveApscData(results))\n      })\n  }\n}\n\nexport const selectYear = selectedYear => ({\n  type: types.SELECT_YEAR,\n  selectedYear\n})\n\nexport const selectResult = selectedResult => ({\n  type: types.SELECT_RESULT,\n  selectedResult\n})\n\nexport const setGlobeStatus = newStatus => ({\n  type: types.SET_GLOBE_STATUS,\n  newStatus\n})\n","export const SEARCH_TERM = 'SEARCH_TERM';\nexport const SHOW_SECTION = 'SHOW_SECTION';\nexport const REQUEST_APSC_DATA = 'REQUEST_APSC_DATA';\nexport const RECEIVE_APSC_DATA = 'RECEIVE_APSC_DATA';\nexport const SELECT_YEAR = 'SELECT_YEAR';\nexport const SELECT_RESULT = 'SELECT_RESULT';\nexport const SET_GLOBE_STATUS = 'SET_GLOBE_STATUS';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RECEIVE_APSC_DATA } from '../constants/ActionTypes'\n\nconst initialState = []\n\nconst phaseResults = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_APSC_DATA: {\n      return action.json\n    }\n    default:\n      return state\n  }\n};\n\nexport default phaseResults\n","import { SELECT_RESULT } from '../constants/ActionTypes'\n\nconst initialState = {}\n\nconst selectedResult = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RESULT: {\n      return Object.assign({}, state, action.selectedResult)\n    }\n    default:\n      return state\n  }\n};\n\nexport default selectedResult\n","import { SET_GLOBE_STATUS } from '../constants/ActionTypes'\n\nconst initialState = {\n  spinning: true\n}\n\nconst globeStatus = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GLOBE_STATUS: {\n      return Object.assign({}, state, action.newStatus)\n    }\n    default:\n      return state\n  }\n};\n\nexport default globeStatus\n","import { combineReducers } from 'redux'\nimport phaseResults from './phaseResults'\nimport selectedResult from './selectedResult'\nimport globeStatus from './globeStatus'\n\nconst rootReducer = combineReducers({\n  phaseResults,\n  selectedResult,\n  globeStatus\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middlewares = process.env.NODE_ENV === 'production' ? [thunk, promise] : [thunk, promise, createLogger()];\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middlewares)\n  );\n\n  return store;\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport AppContainer from './containers/AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nlet initialState = {};\nconst store = configureStore(initialState);\nrender(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}