{"version":3,"sources":["components/Globe/CircleLineGeometry.js","components/Globe/Pulse.js","components/Globe/CircleLineBufferGeometry.js","components/Globe/MyGlobe.js","components/Globe/Globe.js","components/AthleteList/AthleteFilters.js","components/AthleteList/AthleteCard.js","components/AthleteList/AthleteDetailCard.js","components/AthleteList/AthleteList.js","components/App.js","containers/AppContainer.js","actions/index.js","constants/ActionTypes.js","serviceWorker.js","reducers/phaseResults.js","reducers/selectedResult.js","reducers/globeStatus.js","reducers/filterOptions.js","reducers/index.js","store/configureStore.js","index.js"],"names":["CircleLineGeometry","radius","segments","thetaStart","thetaLength","args","Math","PI","geometry","THREE","delta","i","angle","x","cos","y","sin","vertices","push","Pulse","color","duration","arguments","length","undefined","call","this","lineColor","shaderMaterial","side","uniforms","vertexShader","document","getElementById","textContent","fragmentShader","transparent","opacity","lineGeometry","linewidth","line","add","CircleLineBufferGeometry","positions","colors","started","now","randFloat","threeColor","r","g","b","addAttribute","setDynamic","console","log","prototype","Object","assign","create","constructor","start","Date","setSeconds","getSeconds","stop","hide","material","update","t","floor","scale","set","MyGlobe","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","renderer","scene","container","camera","object","controls","fov","altitude","initialDistance","globeProps","globeRadius","widthSegments","heightSegments","globeGroup","circleGroup","markerObject","raycaster","mouse","color1","type","value","color2","prevProps","_this$props","phaseResults","selectedResult","globeStatus","redraw","firstItemOld","all","firstItemNew","n_PhaseResultID","updatePhaseResults","rotateCamera","geojson","lat","lng","viewDetails","zoomOut","highlightCircle","unHighlightCircle","_this2","_this$props2","setPOI","unsetPOI","WIDTH","clientWidth","HEIGHT","clientHeight","setSize","position","lookAt","distanceTo","OrbitControls","domElement","autoRotate","autoRotateSpeed","background","appendChild","ambientLight","spotLight","load","texture","sphere","map","wireframe","mesh","name","drag","canvas","addEventListener","event","globeObject","getObjectByName","canvasBounds","context","getBoundingClientRect","clientX","left","right","clientY","top","bottom","setFromCamera","children","remove","intersects","intersectObject","pointOfIntersection","point","addMarkerPOI2","_this$calculateLatLng","calculateLatLngCoordinates","centerDistance","render","requestAnimationFrame","forEach","circle","TWEEN","state","spinning","c","visible","poi","filtered","zoomFactor","target","calculate3dCoordinates","coeff","from","z","to","easing","Quartic","Out","onUpdate","copy","distanceToCenter","element","addCircle","spherical","setFromVector3","newPosition","setFromSpherical","circleMaterial","pie","vertexColors","center","medalColor","n_RankMedal","pulseGeometry","pulse","threeVector","radToDeg","phi","theta","parseInt","react_default","a","createElement","id","Component","Globe","setVisibleResults","onUnselectResult","Globe_MyGlobe","AthleteFilters","resetValues","sport","gender","medal","sortby","objectSpread","onChange","bind","assertThisInitialized","onReset","setFilters","newFilterValues","setState","filterOptions","showFilters","sportNames","key","concat","genderNames","medalNames","cssClass","className","htmlFor","onClick","AthleteCard","result","formattedDate","format","parse","d_PhaseDate","c_Person","c_Team","e","preventDefault","c_EventGender","c_Sportname","c_CompetitionName","c_PhaseCity","c_PhaseCountry","AthleteDetailCard","c_Result","c_ResultType","n_PersonAgeYears","AthleteList","autoPlay","autoRefresh","daysAgo","refreshInterval","refreshTimer","autoPlayTimer","onClickToggleFilters","onClickRefresh","onClickAutoPlay","triggerAutoScripts","onSelectResult","fetchGraceNoteData","newDaysAgo","window","setInterval","clearInterval","filteredResults","poiResults","cardSource","athleteCards","components_AthleteList_AthleteCard","onClickAthleteCard","toggleCssClass","heading","loader","loading","dist_default","title","AthleteList_AthleteFilters","components_AthleteList_AthleteDetailCard","onCloseDetail","App","components_Globe_Globe","components_AthleteList_AthleteList","AppContainer","connect","dispatch","options","nationality","hasMedal","fetch","then","response","json","results","slice","countryGeo","countries","find","Country","countryCode","cityGeo","cities","country","receiveGraceNoteData","Boolean","location","hostname","match","initialState","error","sortBy","order","sortOrder","action","copyState","distance","sqrt","filter","sort","ignoreSportName","ignoreGender","ignoreMedal","ignoreName","sortKey","toUpperCase","includes","getAvailableFields","fieldName","temp","array","toConsumableArray","Set","unshift","rootReducer","combineReducers","middlewares","thunk","promise","store","createStore","applyMiddleware","apply","es","containers_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2bf4108.chunk.js","sourcesContent":["import * as THREE from 'three'\n\nexport default function CircleLineGeometry(radius, segments, thetaStart, thetaLength) {\n  const args = {\n    radius: radius || 50,\n    segments: segments || 8,\n    thetaStart: thetaStart || 0,\n    thetaLength: thetaLength || (2 * Math.PI),\n  };\n  const geometry = new THREE.Geometry();\n  const delta = ((args.thetaStart + args.thetaLength) - args.thetaStart) / args.segments;\n  for (let i = 0; i <= args.segments; i += 1) {\n    const angle = args.thetaStart + (delta * i);\n    const x = args.radius * Math.cos(angle);\n    const y = args.radius * Math.sin(angle);\n    geometry.vertices.push(new THREE.Vector3(x, y, 0));\n  }\n  return geometry;\n}\n","import * as THREE from 'three'\nimport CircleLineGeometry from './CircleLineGeometry'\n\nexport default function Pulse(radius, color, duration = 5000, autoStart = true) {\n  THREE.Object3D.call(this);\n\n  this.duration = duration;\n  const segments = 32;\n  // const discColor = color;\n  const lineColor = color;\n\n  // const discGeometry = new THREE.CircleGeometry(radius, segments);\n  // const discMaterial = new THREE.MeshLambertMaterial({\n  //   side: THREE.DoubleSide,\n  //   color: discColor,\n  //   transparent: true,\n  //   opacity: 1,\n  // });\n  // this.disc = new THREE.Mesh(discGeometry, discMaterial);\n  // this.add(this.disc);\n\n  const shaderMaterial = new THREE.ShaderMaterial({\n    side: THREE.DoubleSide,\n    uniforms: this.uniforms,\n    vertexShader: document.getElementById('vertexShader').textContent,\n    fragmentShader: document.getElementById('fragmentShader').textContent,\n    transparent: true,\n    opacity: 0.5\n  })\n\n  const lineGeometry = new CircleLineGeometry(radius, segments);\n  const lineMaterial = new THREE.LineBasicMaterial({\n    color: lineColor,\n    linewidth: 1,\n    transparent: true,\n    opacity: 1,\n  });\n  this.line = new THREE.Line(lineGeometry, shaderMaterial);\n  this.add(this.line);\n\n  // if (autoStart) {\n  //   this.start();\n  // }\n}\n\nPulse.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n\n  constructor: Pulse,\n\n  start() {\n    this.started = new Date()\n    // Adding random starting time\n    this.started.setSeconds(this.started.getSeconds() + THREE.Math.randFloat(-1,1));\n  },\n\n  stop() {\n    this.started = null;\n  },\n\n  hide() {\n    this.line.material.opacity = 0\n    // this.disc.material.opacity = 0\n  },\n\n  update() {\n    if (!this.started) {\n      return;\n    }\n    const now = new Date();\n    let t = (now - this.started) / this.duration;\n    if (t >= 1) {\n      t -= Math.floor(t);\n    }\n\n    const opacity = 1 - t*t*t*t;\n\n    let scale = t <= 0 ? 0.001 : t\n\n    // I was getting an error:\n    //  Matrix3.getInverse(): can't invert matrix, determinant is 0\n    //\n    // From SO:\n    //  Matrix3.getInverse(): can't invert matrix, determinant is 0\n    //  usually happens when either the scale.x, scale.y or scale.z are 0.\n    //  Make sure you're not scaling the object to 0.\n    //\n    // Ref:\n    //  http://stackoverflow.com/questions/19150120/scaling-an-object-in-three-js\n\n    this.scale.set(scale, scale, scale);\n    this.line.material.opacity = opacity;\n    // this.disc.material.opacity = opacity * 0.5;\n  },\n\n});","import * as THREE from 'three'\n\nexport default function CircleLineBufferGeometry(radius, segments, thetaStart, thetaLength, color = 0xff0000) {\n  const args = {\n    radius: radius || 50,\n    segments: segments || 8,\n    thetaStart: thetaStart || 0,\n    thetaLength: thetaLength || (2 * Math.PI),\n  };\n  const geometry = new THREE.BufferGeometry();\n  const delta = ((args.thetaStart + args.thetaLength) - args.thetaStart) / args.segments;\n  const positions = []\n  const colors = []\n  const started = []\n  // let now = new Date()\n  // Adding random starting time\n  // now = now.setSeconds(now.getSeconds() + THREE.Math.randFloat(-1,1))\n\n  const now = THREE.Math.randFloat(-1, 1)\n  for (let i = 0; i <= args.segments; i += 1) {\n    const angle = args.thetaStart + (delta * i);\n    const x = args.radius * Math.cos(angle);\n    const y = args.radius * Math.sin(angle);\n    positions.push(x, y, 0)\n    const threeColor = new THREE.Color(color)\n    colors.push(threeColor.r, threeColor.g, threeColor.b)\n\t\tstarted.push(now)\n  }\n\n  geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n  geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\n  geometry.addAttribute( 'started', new THREE.Float32BufferAttribute( started, 1 ).setDynamic( true ));\n  // geometry.addAttribute( 'size', new THREE.Float32BufferAttribute( sizes, 1 ).setDynamic( true ) );\n  console.log(geometry)\n  return geometry;\n}\n","import React, { Component } from 'react';\nimport * as THREE from 'three'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport OrbitControls from 'threejs-orbit-controls'\nimport Pulse from './Pulse'\nimport CircleLineBufferGeometry from './CircleLineBufferGeometry'\nimport CircleLineGeometry from './CircleLineGeometry'\n\n// TODO:\n// https://threejs.org/examples/?q=attr#webgl_custom_attributes\n// https://github.com/mrdoob/three.js/blob/master/examples/webgl_buffergeometry_custom_attributes_particles.html\n// https://gist.github.com/jeanlescure/e27c93b73a10b64e85e4\n// http://learnwebgl.brown37.net/12_shader_language/glsl_introduction.html\n\nclass MyGlobe extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderer = new THREE.WebGLRenderer()\n\t\tthis.scene = new THREE.Scene()\n\t\tthis.container = null\n\t\tthis.camera = {\n\t\t\tobject: null, // camera object\n\t\t\tcontrols: null, // orbitControls object\n\t\t\tfov: 60,\n\t\t\taltitude: 400,\n\t\t\tinitialDistance: 0\n\t\t}\n\n\t\tthis.globeProps = {\n\t\t\tglobeRadius: 200,\n\t\t\twidthSegments: 100,\n\t\t\theightSegments: 100\n\t\t}\n\n\t\tthis.globeGroup = new THREE.Group()\n\t\tthis.circleGroup = new THREE.Group()\n\t\tthis.markerObject = new THREE.Object3D()\n\n\t\tthis.raycaster = new THREE.Raycaster()\n\t\tthis.mouse = new THREE.Vector2()\n\n\t\tthis.uniforms = {\n\t\t\t'color1': { type : 'c', value : new THREE.Color(0xff0000) },\n\t\t\t'color2': { type : 'c', value : new THREE.Color(0x0000ff) },\n\t\t\t'scale': { type: 'f', value: 1.0 },\n\t\t\t'now': { type: 'f', value: 1.0 },\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { phaseResults, selectedResult, globeStatus } = this.props\n\n\t\tlet redraw = false\n\n\t\tif (prevProps.phaseResults !== undefined) {\n\t\t\tconst firstItemOld = prevProps.phaseResults.all[0] !== undefined ? prevProps.phaseResults.all[0] : false\n\t\t\tconst firstItemNew = phaseResults.all[0] !== undefined ? phaseResults.all[0] : false\n\t\t\tif (prevProps.phaseResults.all.length !== phaseResults.all.length || firstItemOld.n_PhaseResultID !== firstItemNew.n_PhaseResultID) {\n\t\t\t\tredraw = true\n\t\t\t}\n\t\t}\n\n\t\tthis.updatePhaseResults(phaseResults, redraw)\n\n\t\tif (prevProps.selectedResult !== undefined) {\n\t\t\tif (selectedResult.n_PhaseResultID !== prevProps.selectedResult.n_PhaseResultID) {\n\t\t\t\tthis.rotateCamera(selectedResult.geojson.lat, selectedResult.geojson.lng, 1.2)\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.globeStatus.viewDetails === true && globeStatus.viewDetails === false) {\n\t\t\tthis.zoomOut()\n\t\t}\n\n\t\tif (globeStatus.viewDetails === true) {\n\t\t\tthis.highlightCircle(selectedResult)\n\t\t} else {\n\t\t\tthis.unHighlightCircle(phaseResults)\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { setPOI, unsetPOI } = this.props\n\t\tconst _this = this\n\t\tthis.container = document.getElementById('my-globe')\n\n\t\tconst WIDTH = this.container.clientWidth\n\t\tconst HEIGHT = this.container.clientHeight\n\n\t\t/** Renderer */\n\t\tthis.renderer.setSize(WIDTH, HEIGHT)\n\n\t\t/** Camera */\n\t\tthis.camera.object = new THREE.PerspectiveCamera(this.camera.fov, WIDTH / HEIGHT, 1, 10000)\n\t\tthis.camera.object.position.set(0, 200, this.camera.altitude)\n\t\tthis.camera.object.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.camera.initialDistance = this.camera.object.position.distanceTo(new THREE.Vector3(0,0,0))\n\t\tthis.camera.controls = new OrbitControls(this.camera.object, this.renderer.domElement)\n\t\tthis.camera.controls.autoRotate = true\n\t\tthis.camera.controls.autoRotateSpeed = .5\n\n\t\t/** Scene */\n\t\tthis.scene.background = new THREE.Color( 0x000 )\n\t\tthis.scene.add(this.camera.object)\n\t\tthis.container.appendChild(this.renderer.domElement)\n\n\t\t/** Lighting */\n\t\tconst ambientLight = new THREE.AmbientLight(0x404040)\n\t\tthis.scene.add(ambientLight)\n\t\tconst spotLight = new THREE.PointLight(0xffffff);\n\t\tspotLight.position.set(500, 500, 500);\n\t\tthis.camera.object.add(spotLight);\n\n\t\t/** Objects in scene */\n\t\tconst loader = new THREE.TextureLoader()\n\t\tloader.load( 'https://another-quang.github.io/build/assets/day_2048.jpg', texture => {\n\t\t\tconst sphere = new THREE.SphereGeometry(this.globeProps.globeRadius, this.globeProps.widthSegments, this.globeProps.heightSegments)\n\t\t\tconst material = new THREE.MeshLambertMaterial({\n\t\t\t\tmap: texture,\n\t\t\t\t// color: 0xffffff,\n\t\t\t\twireframe: true\n\t\t\t})\n\t\t\tconst mesh = new THREE.Mesh(sphere, material)\n\t\t\tmesh.name = 'globe'\n\t\t\tthis.globeGroup.add(mesh)\n\t\t})\n\n\t\tthis.scene.add(this.globeGroup)\n\t\tthis.scene.add(this.circleGroup)\n\t\tthis.scene.add(this.markerObject)\n\t\t// this.globeGroup.add(new THREE.AxesHelper(1000))\n\t\t// this.globeGroup.add(new THREE.GridHelper(1000, 10, 0x0000ff, 0x808080))\n\n\t\t/** Mouse interaction */\n\n\t\tlet drag = false\n\t\tconst canvas = this.renderer.domElement\n\t\tcanvas.addEventListener('mousedown', () => drag = false)\n\t\tcanvas.addEventListener('mousemove', () => drag = true)\n\t\tcanvas.addEventListener('mouseup', (event) => {\n\t\t\tif (drag === false) {\n\t\t\t\tconst globeObject = _this.globeGroup.getObjectByName('globe')\n\t\t\t\tconst canvasBounds = this.renderer.context.canvas.getBoundingClientRect()\n\t\t\t\t_this.mouse.x = ((event.clientX - canvasBounds.left) / (canvasBounds.right - canvasBounds.left)) * 2 - 1\n\t\t\t\t_this.mouse.y = -((event.clientY - canvasBounds.top) / (canvasBounds.bottom - canvasBounds.top)) * 2 + 1\n\t\t\t\t_this.raycaster.setFromCamera(_this.mouse, _this.camera.object)\n\n\t\t\t\twhile(_this.markerObject.children.length > 0) {\n\t\t\t\t\t_this.markerObject.remove(_this.markerObject.children[0])\n\t\t\t\t}\n\t\t\t\t// Intersection point\n\t\t\t\tconst intersects = _this.raycaster.intersectObject(globeObject)\n\t\t\t\tif (intersects.length === 0) {\n\t\t\t\t\t_this.zoomOut()\n\t\t\t\t\tunsetPOI()\n\t\t\t\t\treturn this.camera.controls.autoRotate = true\n\t\t\t\t}\n\t\t\t\tconst pointOfIntersection = intersects[0].point\n\t\t\t\t_this.addMarkerPOI2(pointOfIntersection)\n\t\t\t\tconst { lat, lng } = _this.calculateLatLngCoordinates(pointOfIntersection)\n\t\t\t\t_this.rotateCamera(lat, lng, 1.2)\n\t\t\t\tsetPOI(lat, lng)\n\t\t\t}\n\t\t})\n\n\t\tconst centerDistance = this.camera.object.position.distanceTo(new THREE.Vector3(0, 0, 0))\n\t\tconst tangentDistance = Math.cos(Math.PI / 180 * this.camera.fov / 2) * centerDistance\n\n\t\tconst started = Date.now()\n\t\tlet now = started\n\t\tconsole.log(this.circleGroup)\n\t\t/** Animation */\n\t\tfunction render () {\n\t\t\trequestAnimationFrame(render)\n\t\t\t_this.circleGroup.children.forEach(circle => {\n\t\t\t\tif (_this.camera.object.position.distanceTo(circle.position) < tangentDistance) {\n\t\t\t\t\t// circle.update()\n\t\t\t\t} else {\n\t\t\t\t\t// circle.hide()\n\t\t\t\t}\n\t\t\t})\n\t\t\t// _this.markerObject.rotateZ(Math.PI / 100)\n\t\t\t// _this.uniforms.scale.value = Math.sin(Date.now() * 0.001)\n\t\t\tnow = Date.now()\n\t\t\tlet t = (now - started) / 3000;\n\t\t\tif (t >= 1) {\n\t\t\t\tt -= Math.floor(t);\n\t\t\t}\n\t\t\t_this.uniforms.scale.value = t\n\t\t\t_this.uniforms.now.value = t // Math.sin(now * 0.0005)\n\t\t\tTWEEN.update()\n\t\t\t_this.camera.controls.update()\n\t\t\t_this.renderer.render(_this.scene, _this.camera.object)\n\t\t}\n\n\t\trender()\n\t}\n\n\tapplyStatus() {\n\t\tthis.camera.controls.autoRotate = this.state.spinning\n\t}\n\n\thighlightCircle(selectedResult) {\n\t\tconst circle = this.circleGroup.getObjectByName(selectedResult.n_PhaseResultID)\n\t\tif (typeof(circle) !== 'undefined') {\n\t\t\tthis.circleGroup.children.forEach(c => c.visible = false)\n\t\t\tcircle.visible = true\n\t\t}\n\t}\n\n\tunHighlightCircle(phaseResults) {\n\t\tconst _this = this\n\t\tconst visibleResults = phaseResults.poi.length > 0 ? phaseResults.poi : phaseResults.filtered\n\t\tvisibleResults.forEach(x => {\n\t\t\tconst circle = _this.circleGroup.getObjectByName(x.n_PhaseResultID)\n\t\t\treturn circle !== undefined ? circle.visible = true : null\n\t\t})\n\t}\n\n\trotateCamera(lat, lng, zoomFactor = 1) {\n\t\tconst _this = this\n\t\tthis.camera.controls.autoRotate = false\n\n\t\tconst target = this.calculate3dCoordinates(lat, lng, this.globeProps.globeRadius)\n\n\t\tconst coeff = this.camera.altitude / this.globeProps.globeRadius / zoomFactor\n\t\tlet from = {\n\t\t\tx: this.camera.object.position.x,\n\t\t\ty: this.camera.object.position.y,\n\t\t\tz: this.camera.object.position.z\n\t\t}\n\n\t\tconst to = {\n\t\t\tx: target.x * coeff,\n\t\t\ty: target.y * coeff,\n\t\t\tz: target.z * coeff\n\t\t}\n\n\t\treturn new TWEEN.Tween(from)\n\t\t\t.to(to, 2000)\n\t\t\t.easing(TWEEN.Easing.Quartic.Out)\n\t\t\t.onUpdate(() => {\n\t\t\t\t_this.camera.object.position.copy(from);\n\t\t\t\t_this.camera.object.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\t})\n\t\t\t.start()\n\t}\n\n\tzoomOut() {\n\t\tconst _this = this\n\t\tconst distanceToCenter = this.camera.object.position.distanceTo(new THREE.Vector3(0, 0, 0))\n\t\tconst coeff = this.camera.initialDistance / distanceToCenter\n\n\t\tlet from = {\n\t\t\tx: this.camera.object.position.x,\n\t\t\ty: this.camera.object.position.y,\n\t\t\tz: this.camera.object.position.z\n\t\t}\n\n\t\tconst to = {\n\t\t\tx: this.camera.object.position.x * coeff,\n\t\t\ty: this.camera.object.position.y * coeff,\n\t\t\tz: this.camera.object.position.z * coeff\n\t\t}\n\n\t\treturn new TWEEN.Tween(from)\n\t\t\t.to(to, 2000)\n\t\t\t.easing(TWEEN.Easing.Quartic.Out)\n\t\t\t.onUpdate(() => {\n\t\t\t\t_this.camera.object.position.copy(from);\n\t\t\t\t_this.camera.object.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\t})\n\t\t\t.start()\n\t}\n\n\tupdatePhaseResults(phaseResults, redraw = false) {\n\t\tvar _this = this\n\t\tif (redraw === true) {\n\t\t\t// Remove all circles\n\t\t\twhile (this.circleGroup.children.length > 0) {\n\t\t\t\tthis.circleGroup.remove(this.circleGroup.children[0])\n\t\t\t}\n\t\t\t// Redraw all circle\n\t\t\treturn phaseResults.all.forEach(element => {\n\t\t\t\tif (element.geojson !== undefined) {\n\t\t\t\t\t_this.addCircle(element)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (this.circleGroup.children.length === 0) {\n\t\t\t// Draw all circles\n\t\t\tphaseResults.all.forEach(element => {\n\t\t\t\tif (element.geojson !== undefined) {\n\t\t\t\t\t_this.addCircle(element)\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\t// Hide all circles and show only what's filtered or poi'ed\n\t\t\tthis.circleGroup.children.forEach(x => x.visible = false)\n\t\t\tconst visibleResults = phaseResults.poi.length > 0 ? phaseResults.poi : phaseResults.filtered\n\t\t\tvisibleResults.forEach(x => {\n\t\t\t\tconst circle = _this.circleGroup.getObjectByName(x.n_PhaseResultID)\n\t\t\t\treturn circle !== undefined ? circle.visible = true : null\n\t\t\t})\n\t\t}\n\t}\n\n\taddMarkerPOI(position) {\n\t\tconst spherical = new THREE.Spherical()\n\t\tspherical.setFromVector3(position)\n\t\tspherical.radius += .2\n\n\t\tconst newPosition = new THREE.Vector3()\n\t\tnewPosition.setFromSpherical(spherical)\n\n\t\tconst distanceThreshold = 20\n\t\tconst circleMaterial = new THREE.MeshBasicMaterial({\n\t\t\tside: THREE.DoubleSide,\n\t\t\tcolor: 0x9cff57,\n\t\t\topacity: 0.5,\n\t\t\ttransparent: true\n\t\t})\n\t\tconst point = new THREE.Mesh(new THREE.CircleGeometry(0.5, 32), circleMaterial)\n\t\tthis.markerObject.add(point)\n\n\t\tconst pie = new THREE.Mesh(new THREE.CircleGeometry(distanceThreshold, 32, 0, Math.PI / 10), circleMaterial)\n\t\tthis.markerObject.add(pie)\n\n\t\t// Set poistion and face for marker\n\t\tthis.markerObject.position.copy(newPosition)\n\t\tthis.markerObject.lookAt(new THREE.Vector3(0 ,0, 0))\n\t}\n\n\taddMarkerPOI2(position) {\n\t\tconst spherical = new THREE.Spherical()\n\t\tspherical.setFromVector3(position)\n\t\tspherical.radius += .2\n\n\t\tconst newPosition = new THREE.Vector3()\n\t\tnewPosition.setFromSpherical(spherical)\n\n\t\tconst distanceThreshold = 5\n\t\tconst circleMaterial = new THREE.MeshBasicMaterial({\n\t\t\tside: THREE.DoubleSide,\n\t\t\tcolor: 0x9cff57,\n\t\t\topacity: 0.5,\n\t\t\ttransparent: true\n\t\t})\n\n\t\t// create the sphere's material\n\t\tconst shaderMaterial = new THREE.ShaderMaterial({\n\t\t\tside: THREE.DoubleSide,\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: document.getElementById('vertexShaderCircle').textContent,\n\t\t\tfragmentShader: document.getElementById('fragmentShaderCircle').textContent,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.5,\n\t\t\tvertexColors: true,\n\t\t})\n\n\t\t// const point = new THREE.Line(new CircleLineBufferGeometry(distanceThreshold, 32), shaderMaterial)\n\t\t// const point = new THREE.Points(new CircleLineBufferGeometry(5, 5, 10), new THREE.ParticleBasicMaterial({ color: 0xff0000 }))\n\t\t// this.markerObject.add(point)\n\n\t\t// const line = new MeshLine()\n\t\t// line.setGeometry(new CircleLineBufferGeometry(distanceThreshold, 32), p => 2)\n\t\t// const mat = new MeshLineMaterial({\n\t\t// \tcolor: new THREE.Color(0xff0000),\n\t\t// \tlineWidth: .2\n\t\t// })\n\t\t// const mesh = new THREE.Mesh(line.geometry, mat)\n\t\t// this.markerObject.add(mesh)\n\n\t\tconst geometry = new THREE.CircleGeometry(distanceThreshold, 32)\n\t\tconst pie = new THREE.Mesh(geometry, shaderMaterial)\n\t\tthis.markerObject.add(pie)\n\n\t\t// Set poistion and face for marker\n\t\tthis.markerObject.position.copy(newPosition)\n\t\tthis.markerObject.lookAt(new THREE.Vector3(0 ,0, 0))\n\t}\n\n\taddCircle(element) {\n\t\tconst center = this.calculate3dCoordinates(element.geojson.lat + THREE.Math.randFloat(-2, 2), element.geojson.lng + THREE.Math.randFloat(-2, 2), this.globeProps.globeRadius)\n\t\tconst medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst radius = THREE.Math.randFloat(5, 10)\n\t\t// let pulse = new Pulse(radius, medalColor)\n\t\tconst pulseGeometry = new CircleLineBufferGeometry(radius, 32, 0, Math.PI * 2, medalColor)\n\n\t\tconst shaderMaterial = new THREE.ShaderMaterial({\n\t\t\tuniforms:  this.uniforms,\n\t\t\tvertexShader: document.getElementById('vertexShader').textContent,\n\t\t\tfragmentShader: document.getElementById('fragmentShader').textContent,\n\t\t\tvertexColors: true,\n\t\t\ttransparent: true,\n\t\t\topacity: 1.0\n\t\t})\n\n\t\tconst pulse = new THREE.Line(pulseGeometry, shaderMaterial)\t\t\t\t\n\t\t\n\t\tpulse.name = element.n_PhaseResultID\n\t\tpulse.position.copy(center)\n\t\tpulse.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.circleGroup.add(pulse)\n\t}\n\n\tcalculateLatLngCoordinates(threeVector) {\n\t\tconst spherical = new THREE.Spherical()\n\t\tspherical.setFromVector3(threeVector)\n\t\tconst lat = THREE.Math.radToDeg(Math.PI / 2 - spherical.phi)\n\t\tlet lng = THREE.Math.radToDeg(spherical.theta - Math.PI / 2)\n\t\tlng = lng < -180 ? lng + 360 : lng\n\t\treturn {lat, lng}\n\t}\n\n\tcalculate3dCoordinates(lat, lng, radius) {\n\t\tconst phi   = (90 - parseInt(lat, 10)) * (Math.PI / 180)\n\t\tconst theta = (parseInt(lng, 10) + 180) * (Math.PI / 180)\n\t\tconst x = -((radius) * Math.sin(phi) * Math.cos(theta))\n\t\tconst z = ((radius) * Math.sin(phi) * Math.sin(theta))\n\t\tconst y = ((radius) * Math.cos(phi))\n\n\t\treturn new THREE.Vector3(x, y, z)\n\t}\n\n\trender() {\n\t\treturn ( <div id=\"my-globe\"></div> );\n\t}\n}\n\nexport default MyGlobe;\n","import React, { Component } from 'react'\nimport MyGlobe from './MyGlobe'\nimport './Globe.scss'\n\nclass Globe extends Component {\n  render() {\n    const {phaseResults, selectedResult, globeStatus, setVisibleResults, setPOI, unsetPOI,onUnselectResult} = this.props\n    return (\n      <MyGlobe\n        phaseResults={phaseResults}\n        selectedResult={selectedResult}\n        globeStatus={globeStatus}\n        setVisibleResults={setVisibleResults}\n        setPOI={setPOI}\n        unsetPOI={unsetPOI}\n        onUnselectResult={onUnselectResult}\n        />\n    );\n  }\n}\n\nexport default Globe;","import React, { Component } from 'react'\n\nclass AthleteFilters extends Component {\n  constructor(props) {\n    super(props)\n\n    this.resetValues = {\n      sport: 'All',\n      gender: 'All',\n      medal: 'All',\n      name: '',\n      sortby: 'time-desc'\n    }\n\n    this.state = { ...this.resetValues }\n\n    this.onChange = this.onChange.bind(this)\n    this.onReset = this.onReset.bind(this)\n  }\n\n  onChange() {\n    const { setFilters } = this.props\n    const newFilterValues = {\n      sport: document.getElementById('sport-name').value,\n      gender: document.getElementById('sport-gender').value,\n      medal: document.getElementById('sport-medal').value,\n      name: document.getElementById('athlete-name').value,\n      sortby: document.getElementById('sort-by').value,\n    }\n    return this.setState(newFilterValues, setFilters(newFilterValues))\n  }\n\n  onReset() {\n    const { setFilters } = this.props\n    return this.setState({ ...this.resetValues }, setFilters(this.resetValues))\n  }\n\n  render() {\n    const { filterOptions, showFilters } = this.props\n    const sportNames = filterOptions.sport.map(x => (<option key={`sport-${x}`} value={x}>{x}</option>))\n    const genderNames = filterOptions.gender.map(x => (<option key={`gender-${x}`} value={x}>{x}</option>))\n    const medalNames = filterOptions.medal.map(x => (<option key={`medal-${x}`} value={x}>{x}</option>))\n    const cssClass = showFilters === true ? '' : 'd-none'\n    return (\n      <div className={cssClass}>\n        <div className=\"form-row\">\n          <div className=\"col-6\">\n            <div className=\"form-group\">\n              <label htmlFor=\"sport-name\">Sport</label>\n              <select id=\"sport-name\" name=\"sport\" value={this.state.sport} className=\"form-control\" onChange={this.onChange}>\n                {sportNames}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <div className=\"form-group\">\n              <label htmlFor=\"sport-gender\">Gender</label>\n              <select id=\"sport-gender\" name=\"gender\" value={this.state.gender} className=\"form-control\" onChange={this.onChange}>\n                {genderNames}\n              </select>\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <div className=\"form-group\">\n              <label htmlFor=\"sport-medal\">Medal</label>\n              <select id=\"sport-medal\" name=\"medal\" value={this.state.medal} className=\"form-control\" onChange={this.onChange}>\n                {medalNames}\n              </select>\n            </div>\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"col-9\">\n            <div className=\"form-group\">\n              <label htmlFor=\"athlete-name\">Athelete name</label>\n              <input id=\"athlete-name\" name=\"name\" value={this.state.name} type=\"text\" className=\"form-control\" onChange={this.onChange} />\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <div className=\"form-group\">\n              <label htmlFor=\"sort-by\">Sort by</label>\n              <select id=\"sort-by\" name=\"sortby\" value={this.state.sortby} className=\"form-control\" onChange={this.onChange}>\n                <option value=\"time-desc\">Newest first</option>\n                <option value=\"time-asc\">Oldest first</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <button className=\"btn btn-link p-0\" onClick={this.onReset}>Reset filters</button>\n      </div>\n     )\n  }\n}\n\nexport default AthleteFilters","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteCard.scss'\n\nclass AthleteCard extends Component {\n  render() {\n    const { result, onClick } = this.props\n    const formattedDate = format(parse(result.d_PhaseDate), 'D MMMM YYYY')\n    const name = result.c_Person === null ? `Team ${result.c_Team}` : result.c_Person\n    const medal = result.n_RankMedal === 1 ? \"🥇\" : (result.n_RankMedal === 2 ? \"🥈\" : (result.n_RankMedal === 3 ? \"🥉\" : result.n_RankMedal))\n    // const lng = result.geojson ? result.geojson.lng : \"\"\n    // const lat = result.geojson ? result.geojson.lat : \"\"\n    return (\n      <div className=\"athlete--card media rounded mb-3 p-2 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h5 className=\"mt-0\">{medal} {name}</h5>\n          <p className=\"mb-0\">\n            {result.c_EventGender} { result.c_Sportname}, {result.c_CompetitionName}<br/>\n            <small className=\"text-muted\">\n              {result.c_PhaseCity} {result.c_PhaseCountry}<br/>\n              {formattedDate}\n            </small>\n          </p>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteCard;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteDetailCard.scss'\n\nclass AthleteDetailCard extends Component {\n  render() {\n    const { selectedResult, onClick } = this.props\n    const formattedDate = format(parse(selectedResult.d_PhaseDate), 'D MMMM YYYY')\n    const name = selectedResult.c_Person === null ? `Team ${selectedResult.c_Team}` : selectedResult.c_Person\n    const medal = selectedResult.n_RankMedal === 1 ? \"🥇\" : (selectedResult.n_RankMedal === 2 ? \"🥈\" : (selectedResult.n_RankMedal === 3 ? \"🥉\" : selectedResult.n_RankMedal))\n    const result = selectedResult.c_Result !== null ? (<div><dt>Result ({selectedResult.c_ResultType})</dt><dd>{selectedResult.c_Result}</dd></div>) : null\n    return (\n      <div className=\"athlete--detail--card media rounded mb-3 p-3 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h3 className=\"my-3\"><i className=\"material-icons md-48\">navigate_before</i> {name}</h3>\n          <dl>\n            <dt>Rank</dt>\n            <dd className=\"display-4\">{medal}</dd>\n            <dt>Sport</dt>\n            <dd>{selectedResult.c_EventGender} { selectedResult.c_Sportname}</dd>\n            <dt>Date</dt>\n            <dd>{formattedDate} {selectedResult.n_PersonAgeYears ? `(${selectedResult.n_PersonAgeYears} years old)` : ''}</dd>\n            <dt>Competition</dt>\n            <dd>{selectedResult.c_CompetitionName}</dd>\n            <dt>Location</dt>\n            <dd>{selectedResult.c_PhaseCity} {selectedResult.c_PhaseCountry}</dd>\n            {result}\n          </dl>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteDetailCard","import React, { Component } from 'react'\nimport Spinner from 'react-spinkit'\nimport AthleteFilters from './AthleteFilters'\nimport AthleteCard from './AthleteCard'\nimport AthleteDetailCard from './AthleteDetailCard'\nimport './AthleteList.scss'\n\nclass AthleteList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showFilters: false,\n      autoPlay: false,\n      autoRefresh: false,\n      daysAgo: 90,\n      refreshInterval: 10000,\n    }\n\n    this.refreshTimer = null\n    this.autoPlayTimer = null\n\n    this.onClickToggleFilters = this.onClickToggleFilters.bind(this)\n    this.onClickRefresh = this.onClickRefresh.bind(this)\n    this.onClickAutoPlay = this.onClickAutoPlay.bind(this)\n    this.triggerAutoScripts = this.triggerAutoScripts.bind(this)\n  }\n\n  onClickToggleFilters() {\n    return this.setState({ showFilters: !this.state.showFilters })\n  }\n\n  onClickAthleteCard(result) {\n    const { onSelectResult } = this.props\n    return onSelectResult(result)\n  }\n\n  onCloseDetail() {\n    const { onUnselectResult } = this.props\n    return onUnselectResult()\n  }\n\n  onClickRefresh() {\n    const { fetchGraceNoteData } = this.props\n    const newDaysAgo = this.state.daysAgo\n    this.setState({ daysAgo: newDaysAgo }, () => fetchGraceNoteData({ daysAgo: newDaysAgo }))\n  }\n\n  onClickAutoPlay() {\n    const _this = this\n    this.setState({ autoPlay: !this.state.autoPlay, autoRefresh: !this.state.autoRefresh }, () => _this.triggerAutoScripts())\n  }\n\n\n  triggerAutoScripts() {\n    const _this = this\n    if (this.state.autoRefresh === true) {\n      this.refreshTimer = window.setInterval(() => {\n        _this.onClickRefresh()\n      }, this.state.refreshInterval)\n    } else {\n      window.clearInterval(this.refreshTimer)\n    }\n\n    // if (this.state.autoRefresh === true) {\n    //   this.autoPlayTimer = window.setInterval(() => {\n    //     _this.onClickRefresh()\n    //   }, this.state.refreshInterval)\n    // } else {\n    //   window.clearInterval(this.autoPlayTimer)\n    // }\n\n  }\n\n  render() {\n    const _this = this\n    const { selectedResult, globeStatus, filterOptions, setFilters, phaseResults } = this.props\n    const filteredResults = phaseResults.filtered\n    const poiResults = phaseResults.poi\n    const cardSource = poiResults.length > 0 ? poiResults : filteredResults\n    const athleteCards = cardSource.map( r => <AthleteCard key={r.n_PhaseResultID} result={r} onClick={() => _this.onClickAthleteCard(r)} /> )\n\n    const toggleCssClass = `float-right btn btn-link ${this.state.showFilters ? '' : 'text-white'}`\n    const heading = cardSource.length > 0 ? `Found ${cardSource.length} medalists` : 'No medalist found'\n\n    const loader = phaseResults.loading === true ? (\n      <div className=\"d-flex p-3 align-items-center justify-content-center\">\n        <Spinner name=\"three-bounce\" color=\"#00bc8c\" />\n      </div>\n      ) : null\n\n    const cssClass = globeStatus.viewDetails ? 'athlete--list--container athlete--list--container__detailed' : 'athlete--list--container'\n    return (\n      <div className={cssClass} id=\"athlete-list\">\n        <div className=\"athlete--list p-3\">\n          <div className=\"clearfix\">\n            <button onClick={this.onClickToggleFilters} className={toggleCssClass} title=\"Toggle filters\">\n              <i className=\"material-icons md-48\">filter_list</i>\n            </button>\n            <button onClick={this.onClickRefresh} className=\"float-right btn btn-link text-white\" title=\"Refresh data\">\n              <i className=\"material-icons md-48\">refresh</i>\n            </button>\n            <button onClick={this.onClickAutoPlay} className=\"float-right btn btn-link text-white\" title=\"Autoplay\">\n              <i className=\"material-icons md-48\">play_arrow</i>\n            </button>\n            <h1>Aussie medalists</h1>\n            {loader}\n          </div>\n          <AthleteFilters filterOptions={filterOptions} setFilters={setFilters} phaseResults={phaseResults} showFilters={this.state.showFilters} />\n\n          <h4 className=\"my-3\">{heading}</h4>\n          {athleteCards}\n        </div>\n        <AthleteDetailCard selectedResult={selectedResult} onClick={() => _this.onCloseDetail()} />\n      </div>\n    );\n  }\n}\n\nexport default AthleteList","import React, { Component } from 'react'\nimport Globe from './Globe/Globe'\nimport AthleteList from './AthleteList/AthleteList'\nimport '../vendors/stylesheets/bootstrap/bootstrap.scss'\nimport './App.scss'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchGraceNoteData({ daysAgo: 10 })\n  }\n\n  render() {\n    const { fetchGraceNoteData, phaseResults, selectedResult, onSelectResult, onUnselectResult, setPOI, unsetPOI, globeStatus, filterOptions, setFilters } = this.props\n\n    return (\n      <div className=\"container-fluid p-0\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-lg-8\">\n            <Globe\n              phaseResults={phaseResults}\n              selectedResult={selectedResult}\n              globeStatus={globeStatus}\n              setPOI={setPOI}\n              unsetPOI={unsetPOI}\n            />\n          </div>\n          <div className=\"col-lg-4\">\n            <AthleteList\n              fetchGraceNoteData={fetchGraceNoteData}\n              phaseResults={phaseResults}\n              selectedResult={selectedResult}\n              onSelectResult={onSelectResult}\n              onUnselectResult={onUnselectResult}\n              globeStatus={globeStatus}\n              filterOptions={filterOptions}\n              setFilters={setFilters}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { fetchGraceNoteData, selectResult, setPOI, unsetPOI, unselectResult, setFilters } from '../actions';\nimport App from '../components/App';\n\nconst mapStateToProps = state => {\n  return {\n    phaseResults: state.phaseResults,\n    selectedResult: state.selectedResult,\n    globeStatus: state.globeStatus,\n    filterOptions: state.filterOptions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchGraceNoteData: (options) => {\n      dispatch(fetchGraceNoteData(options));\n    },\n    onSelectResult: result => {\n      dispatch(selectResult(result))\n    },\n    onUnselectResult: () => {\n      dispatch(unselectResult())\n    },\n    setPOI: (lat, lng) => {\n      dispatch(setPOI(lat, lng))\n    },\n    unsetPOI: () => {\n      dispatch(unsetPOI())\n    },\n    setFilters: (newFilterValues) => {\n      dispatch(setFilters(newFilterValues))\n    }\n  };\n};\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default AppContainer;\n","import fetch from 'isomorphic-fetch'\nimport * as types from '../constants/ActionTypes'\nimport countries from '../assets/data/countries.json'\nimport cities from 'cities.json'\n\nexport const requestGraceNoteData = () => ({\n  type: types.REQUEST_GRACENOTE_DATA,\n})\n\nexport const receiveGraceNoteData = (json) => ({\n  type: types.RECEIVE_GRACENOTE_DATA,\n  json\n})\n\nexport const fetchGraceNoteData = (options) => {\n  const { daysAgo = 60, nationality = 'Australia', hasMedal = true } = options\n  const requestUrl = 'https://another-quang.github.io/build/assets/phaseresults.json'\n  // const requestUrl = `http://gracenotelocal/api/phaseresult?daysAgo=${daysAgo}&nationality=${nationality}&hasMedal=${hasMedal}`\n  return dispatch => {\n    dispatch(requestGraceNoteData())\n    return fetch(requestUrl)\n      .then(response => response.json())\n      .then(json => {\n        const results = [];\n        if (json.length > 0) {\n          const subset = json.slice(0, 2)\n          subset.forEach(r => {\n            if (r.c_PhaseCountry !== null) {\n              const countryGeo = countries.find(c => c.Country === r.c_PhaseCountry)\n              const countryCode = countryGeo !== undefined ? countryGeo['Alpha-2 code'] : false\n              const cityGeo = cities.find(c => c.name === r.c_PhaseCity && (c.country === countryCode))\n              const geojson = cityGeo !== undefined ? cityGeo : (countryGeo !== undefined ? countryGeo : undefined)\n              if (geojson !== undefined) {\n                results.push({...r, geojson: geojson})\n              }\n            }\n          })\n        }\n        dispatch(receiveGraceNoteData(results))\n      })\n  }\n}\n\nexport const selectResult = selectedResult => ({\n  type: types.SELECT_RESULT,\n  selectedResult\n})\n\nexport const unselectResult = selectedResult => ({\n  type: types.UNSELECT_RESULT,\n  selectedResult\n})\n\nexport const setPOI = (lat, lng) => ({\n  type: types.SET_POI,\n  lat,\n  lng\n})\n\nexport const unsetPOI = () => ({\n  type: types.UNSET_POI\n})\n\nexport const setFilters = (newFilterValues) => ({\n  type: types.SET_FILTER,\n  newFilterValues\n})","export const REQUEST_GRACENOTE_DATA = 'REQUEST_GRACENOTE_DATA'\nexport const RECEIVE_GRACENOTE_DATA = 'RECEIVE_GRACENOTE_DATA'\nexport const SELECT_RESULT = 'SELECT_RESULT'\nexport const UNSELECT_RESULT = 'UNSELECT_RESULT'\nexport const SET_POI = 'SET_POI'\nexport const UNSET_POI = 'UNSET_POI'\nexport const SET_FILTER = 'SET_FILTER'\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { REQUEST_GRACENOTE_DATA, RECEIVE_GRACENOTE_DATA, SET_POI, UNSET_POI, SET_FILTER } from '../constants/ActionTypes'\n\nconst initialState = {\n  all: [], // Everything\n  filtered: [], // Filtered\n  poi: [], // Near POI\n  loading: true,\n  error: null\n}\n\nconst sortBy = (key, order) => {\n  const sortOrder = order === 'asc' ? 1 : -1\n  return (a, b) => (a[key] > b[key]) ? sortOrder : ((b[key] > a[key]) ? -sortOrder : 0)\n}\n\nconst phaseResults = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST_GRACENOTE_DATA: {\n      return { ...state, loading: true, error: null }\n    }\n\n    case RECEIVE_GRACENOTE_DATA: {\n      if (action.json.length === 0) {\n        return state\n      }\n      return { ...state, loading: false, all: action.json, filtered: action.json }\n    }\n\n    case SET_POI: {\n      const distanceThreshold = 10\n      const copyState = []\n\n      state.filtered.forEach(x => {\n        const a = x.geojson.lat - action.lat\n        const b = x.geojson.lng - action.lng\n        copyState.push({ ...x, distance: Math.sqrt(a * a + b * b) })\n      })\n\n      const results = copyState.filter(x => x.distance < distanceThreshold).sort(sortBy('distance', 'asc'))\n      return { ...state, poi: results }\n    }\n\n    case UNSET_POI: {\n      return { ...state, poi: [] }\n    }\n\n    case SET_FILTER: {\n      const ignoreSportName = action.newFilterValues.sport === 'All' ? true : false\n      const ignoreGender = action.newFilterValues.gender === 'All' ? true : false\n      const ignoreMedal = action.newFilterValues.medal === 'All' ? true : false\n      const ignoreName = action.newFilterValues.name === '' ? true : false\n      let sortKey = ''\n      let order = ''\n      switch (action.newFilterValues.sortby) {\n        case 'time-asc' :\n          sortKey = 'd_PhaseDate'\n          order = 'asc'\n          break\n        default:\n          sortKey = 'd_PhaseDate'\n          order = 'desc'\n          break\n      }\n\n      return { ...state,\n        poi: [],\n        filtered: state.all.filter(x => {\n          return (x.c_Sportname === action.newFilterValues.sport || ignoreSportName)\n            && (x.c_EventGender === action.newFilterValues.gender || ignoreGender)\n            && (x.n_RankMedal === parseInt(action.newFilterValues.medal, 10) || ignoreMedal)\n            && ((x.c_Person !== null ? x.c_Person.toUpperCase().includes(action.newFilterValues.name.toUpperCase()) : false) || ignoreName)\n        }).sort(sortBy(sortKey, order))\n      }\n    }\n    default:\n      return state\n  }\n};\n\nexport default phaseResults\n","import { SELECT_RESULT } from '../constants/ActionTypes'\n\nconst initialState = {}\n\nconst selectedResult = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RESULT: {\n      return Object.assign({}, state, action.selectedResult)\n    }\n    default:\n      return state\n  }\n};\n\nexport default selectedResult\n","import { SELECT_RESULT, UNSELECT_RESULT } from '../constants/ActionTypes'\n\nconst initialState = {\n  viewDetails: false\n}\n\nconst globeStatus = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RESULT: {\n      return Object.assign({}, state, { viewDetails: true })\n    }\n    case UNSELECT_RESULT: {\n      return Object.assign({}, state, { viewDetails: false })\n    }\n    default:\n      return state\n  }\n};\n\nexport default globeStatus\n","import { RECEIVE_GRACENOTE_DATA } from '../constants/ActionTypes'\n\nconst initialState = {\n  sport: [],\n  gender: [],\n  medal: [],\n}\n\nconst uniq = (array) => {\n  return [...new Set(array)]\n}\n\nconst getAvailableFields = (results, fieldName) => {\n  if (results.length > 0) {\n    const temp = uniq(results.map(x => x[fieldName])).sort()\n    temp.unshift('All')\n    return temp\n  }\n}\n\nconst filterOptions = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_GRACENOTE_DATA: {\n      return Object.assign({}, state, {\n        sport: getAvailableFields(action.json, 'c_Sportname'),\n        gender: getAvailableFields(action.json, 'c_EventGender'),\n        medal: getAvailableFields(action.json, 'n_RankMedal'),\n      })\n    }\n\n    default:\n      return state\n  }\n};\n\nexport default filterOptions\n","import { combineReducers } from 'redux'\nimport phaseResults from './phaseResults'\nimport selectedResult from './selectedResult'\nimport globeStatus from './globeStatus'\nimport filterOptions from './filterOptions'\n\nconst rootReducer = combineReducers({\n  phaseResults,\n  selectedResult,\n  globeStatus,\n  filterOptions\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middlewares = process.env.NODE_ENV === 'production' ? [thunk, promise] : [thunk, promise, createLogger()];\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middlewares)\n  );\n\n  return store;\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport AppContainer from './containers/AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nlet initialState = {};\nconst store = configureStore(initialState);\nrender(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}