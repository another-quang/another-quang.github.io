{"version":3,"sources":["components/Globe/MyGlobe.js","components/Globe/Globe.js","components/AthleteList/AthleteCard.js","components/AthleteList/AthleteDetailCard.js","components/AthleteList/AthleteList.js","components/App.js","containers/AppContainer.js","actions/index.js","constants/ActionTypes.js","serviceWorker.js","reducers/phaseResults.js","reducers/selectedResult.js","reducers/globeStatus.js","reducers/index.js","store/configureStore.js","index.js"],"names":["MyGlobe","Object","classCallCheck","this","renderer","THREE","scene","container","camera","object","controls","fov","altitude","globeProps","globeRadius","widthSegments","heightSegments","globeGroup","circleGroup","visibleResults","_this2","_this","document","getElementById","WIDTH","clientWidth","HEIGHT","clientHeight","setSize","position","set","lookAt","OrbitControls","autoRotate","autoRotateSpeed","background","add","appendChild","domElement","ambientLight","spotLight","load","texture","sphere","material","map","mesh","render","requestAnimationFrame","TWEEN","update","globeStatus","spinning","selectedResult","geojson","_selectedResult$geojs","lat","lng","target","calculate3dCoordinates","coeff","from","x","y","z","to","easing","Quartic","Out","onUpdate","copy","start","phaseResults","forEach","element","addCircle","center","randFloat","medalColor","n_RankMedal","radius","pulse","color","side","name","n_PhaseResultID","Math","random","startPoint","endPoint","geometry","vertices","push","lineMaterial","line","circleGeometry","circleMaterial","phi","parseInt","PI","theta","sin","cos","Globe","props","possibleConstructorReturn","getPrototypeOf","call","myGlobe","react_default","a","createElement","id","prevProps","_this$props","updatePhaseResults","rotateCamera","applyStatus","init","Component","AthleteCard","result","onClick","formattedDate","format","parse","d_PhaseDate","c_Person","concat","c_Team","medal","className","e","preventDefault","c_EventGender","c_Sportname","c_CompetitionName","c_PhaseCity","c_PhaseCountry","AthleteDetailCard","state","c_Result","c_ResultType","n_PersonAgeYears","AthleteList","viewDetails","onSelectResult","setGlobeStatus","setState","_this$props2","athleteCards","r","components_AthleteList_AthleteCard","key","onClickAthleteCard","heading","length","cssClass","components_AthleteList_AthleteDetailCard","onCloseDetail","App","loaded","fetchApscData","components_Globe_Globe","components_AthleteList_AthleteList","AppContainer","connect","dispatch","type","fetch","then","response","json","results","slice","cities","find","c","countries","Country","assign","receiveApscData","onYearChange","selectedYear","selectYear","newStatus","Boolean","window","location","hostname","match","initialState","arguments","undefined","action","rootReducer","combineReducers","middlewares","thunk","promise","store","createStore","applyMiddleware","apply","es","containers_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0145474c.chunk.js","sourcesContent":["import * as THREE from 'three'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport OrbitControls from 'threejs-orbit-controls'\n// import Pulse from './Pulse'\n\nclass MyGlobe {\n\tconstructor() {\n\t\tthis.renderer = new THREE.WebGLRenderer()\n\t\tthis.scene = new THREE.Scene()\n\t\t// this.containerId = containerId || \"my-globe\"\n\t\tthis.container = null\n\t\tthis.camera = {\n\t\t\tobject: null, // camera object\n\t\t\tcontrols: null, // orbitControls object\n\t\t\tfov: 60,\n\t\t\taltitude: 500\n\t\t}\n\n\t\tthis.globeProps = {\n\t\t\tglobeRadius: 200,\n\t\t\twidthSegments: 20,\n\t\t\theightSegments: 20\n\t\t}\n\n\t\tthis.globeGroup = new THREE.Group()\n\t\tthis.circleGroup = new THREE.Group()\n\t\tthis.visibleResults = []\n\t}\n\n\tinit() {\n\t\tconst _this = this\n\t\tthis.container = document.getElementById(\"my-globe\")\n\t\tconst WIDTH = this.container.clientWidth\n\t\tconst HEIGHT = this.container.clientHeight\n\n\t\t/** Renderer */\n\t\tthis.renderer.setSize(WIDTH, HEIGHT)\n\n\t\t/** Camera */\n\t\tthis.camera.object = new THREE.PerspectiveCamera(this.camera.fov, WIDTH / HEIGHT, 1, 10000)\n\t\tthis.camera.object.position.set(0, 200, this.camera.altitude)\n\t\tthis.camera.object.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.camera.controls = new OrbitControls(this.camera.object, this.container)\n\t\tthis.camera.controls.autoRotate = true\n\t\tthis.camera.controls.autoRotateSpeed = .5\n\t\t// this.camera.controls.enableZoom = false\n\n\t\t/** Scene */\n\t\tthis.scene.background = new THREE.Color( 0x000 )\n\t\tthis.scene.add(this.camera.object)\n\t\tthis.container.appendChild(this.renderer.domElement)\n\n\n\t\t/** Lighting */\n\t\tconst ambientLight = new THREE.AmbientLight(0x404040)\n\t\tthis.scene.add(ambientLight)\n\t\tconst spotLight = new THREE.PointLight(0xffffff);\n\t\tspotLight.position.set(500, 500, 500);\n\t\tthis.camera.object.add(spotLight);\n\n\t\t/** Objects in scene */\n\t\tconst loader = new THREE.TextureLoader()\n\t\tloader.load( 'https://another-quang.github.io/build/assets/night_2048.jpg', texture => {\n\t\t\tconst sphere = new THREE.SphereGeometry(this.globeProps.globeRadius, this.globeProps.widthSegments, this.globeProps.heightSegments)\n\t\t\tconst material = new THREE.MeshLambertMaterial({\n\t\t\t\tmap: texture,\n\t\t\t\t// color: 0xffffff,\n\t\t\t\t// wireframe: true\n\t\t\t})\n\t\t\tconst mesh = new THREE.Mesh(sphere, material)\n\t\t\tthis.globeGroup.add(mesh)\n\t\t})\n\t\tthis.scene.add(this.globeGroup)\n\t\tthis.scene.add(this.circleGroup)\n\t\t// this.globeGroup.add(new THREE.AxesHelper(1000))\n\t\t// this.globeGroup.add(new THREE.GridHelper(1000, 10, 0x0000ff, 0x808080))\n\n\t\t/** Animation */\n\t\tfunction render () {\n\t\t\trequestAnimationFrame(render)\n\n\t\t\t// _this.circleGroup.children.forEach(c => {\n\t\t\t// \tconst centerDistance = _this.camera.object.position.distanceTo(new THREE.Vector3(0, 0, 0))\n\t\t\t// \tconst objectDistance = _this.camera.object.position.distanceTo(c.position)\n\t\t\t// \tif (objectDistance < centerDistance) {\n\t\t\t// \t\tc.update()\n\t\t\t// \t}\n\t\t\t// })\n\t\t\tTWEEN.update()\n\t\t\t_this.camera.controls.update()\n\t\t\t_this.renderer.render(_this.scene, _this.camera.object)\n\t\t}\n\n\t\trender()\n\t}\n\n\tapplyStatus(globeStatus) {\n\t\tthis.camera.controls.autoRotate = globeStatus.spinning\n\t}\n\n\trotateCamera(selectedResult) {\n\t\tif (typeof(selectedResult.geojson) !== 'undefined') {\n\t\t\tconst _this = this\n\t\t\tthis.camera.controls.autoRotate = false\n\n\t\t\tconst { lat, lng } = selectedResult.geojson\n\t\t\tconst target = this.calculate3dCoordinates(lat, lng, this.globeProps.globeRadius)\n\n\t\t\tconst coeff = this.camera.altitude / this.globeProps.globeRadius\n\t\t\tlet from = {\n\t\t\t\tx: this.camera.object.position.x,\n\t\t\t\ty: this.camera.object.position.y,\n\t\t\t\tz: this.camera.object.position.z\n\t\t\t}\n\n\t\t\tconst to = {\n\t\t\t\tx: target.x * coeff,\n\t\t\t\ty: target.y * coeff,\n\t\t\t\tz: target.z * coeff\n\t\t\t}\n\n\t\t\treturn new TWEEN.Tween(from)\n\t\t\t\t.to(to, 3000)\n\t\t\t\t.easing(TWEEN.Easing.Quartic.Out)\n\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t_this.camera.object.position.copy(from);\n\t\t\t\t\t_this.camera.object.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\t\t})\n\t\t\t\t.start()\n\t\t}\n\t}\n\n\tupdatePhaseResults(phaseResults) {\n\t\tvar _this = this\n\t\tphaseResults.forEach(element => {\n\t\t\tif (typeof(element.geojson) !== 'undefined'){\n\t\t\t\t_this.addCircle(element)\n\t\t\t}\n\t\t})\n\t}\n\n\taddCircle(element) {\n\t\tconst center = this.calculate3dCoordinates(element.geojson.lat + THREE.Math.randFloat(-2, 2), element.geojson.lng + THREE.Math.randFloat(-2, 2), this.globeProps.globeRadius)\n\t\tconst medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst radius = THREE.Math.randFloat(5, 10)\n\t\t// let pulse = new Pulse(radius, medalColor)\n\t\tlet pulse = new THREE.Mesh(new THREE.CircleGeometry(radius, 32), new THREE.MeshLambertMaterial({\n\t\t\tcolor: medalColor,\n\t\t\tside: THREE.DoubleSide\n\t\t}))\n\t\tpulse.name = element.n_PhaseResultID\n\t\tpulse.position.copy(center)\n\t\tpulse.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.circleGroup.add(pulse)\n\t}\n\n\taddMarker(element) {\n\t\tvar _this = this\n\t\tconst coeff = 1 + Math.random() * .2 //this.camera.altitude / this.globeProps.globeRadius\n\n\t\tconst startPoint = _this.calculate3dCoordinates(element.geojson.lat, element.geojson.lng, this.globeProps.globeRadius)\n\t\tconst endPoint = new THREE.Vector3(startPoint.x * coeff, startPoint.y * coeff, (startPoint.z + Math.random() * 5) * coeff)\n\n\t\tconst geometry = new THREE.Geometry()\n\t\tgeometry.vertices.push(startPoint, endPoint)\n\t\tconst medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst lineMaterial = new THREE.LineBasicMaterial({\n\t\t\tcolor: medalColor\n\t\t})\n\n\t\tconst line = new THREE.Line(geometry, lineMaterial)\n\t\t_this.globeGroup.add(line)\n\n\t\tconst circleGeometry = new THREE.SphereGeometry(2, 20, 20)\n\t\t// const medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst circleMaterial = new THREE.MeshPhongMaterial({\n\t\t\tcolor: medalColor\n\t\t})\n\t\tconst mesh = new THREE.Mesh(circleGeometry, circleMaterial)\n\t\tmesh.position.copy(endPoint)\n\t\t_this.globeGroup.add(mesh)\n\t}\n\n\tcalculate3dCoordinates(lat, lng, radius) {\n\t\tconst phi   = (90 - parseInt(lat, 10)) * (Math.PI / 180)\n\t\tconst theta = (parseInt(lng, 10) + 180) * (Math.PI / 180)\n\t\tconst x = -((radius) * Math.sin(phi) * Math.cos(theta))\n\t\tconst z = ((radius) * Math.sin(phi) * Math.sin(theta))\n\t\tconst y = ((radius) * Math.cos(phi))\n\n\t\treturn new THREE.Vector3(x, y, z)\n\t}\n}\n\nexport default MyGlobe","import React, { Component } from 'react'\nimport MyGlobe from './MyGlobe'\nimport './Globe.scss'\n\nclass Globe extends Component {\n  constructor(props) {\n    super(props);\n    this.myGlobe = new MyGlobe()\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"my-globe\"></div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { phaseResults, selectedResult, globeStatus } = this.props\n    if (typeof(prevProps.phaseResults[0]) !== 'undefined') {\n      if (prevProps.phaseResults[0].n_PhaseResultID !== phaseResults[0].n_PhaseResultID) {\n        this.myGlobe.updatePhaseResults(phaseResults)\n      }\n    } else {\n      this.myGlobe.updatePhaseResults(phaseResults)\n    }\n    if (globeStatus.spinning === false) {\n      this.myGlobe.rotateCamera(selectedResult)\n    }\n    this.myGlobe.applyStatus(globeStatus)\n  }\n\n  componentDidMount() {\n    this.myGlobe.init()\n  }\n}\n\nexport default Globe;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteCard.scss'\n\nclass AthleteCard extends Component {\n  render() {\n    const { result, onClick } = this.props\n    const formattedDate = format(parse(result.d_PhaseDate), 'D MMMM YYYY')\n    const name = result.c_Person === null ? `Team ${result.c_Team}` : result.c_Person\n    const medal = result.n_RankMedal === 1 ? \"🥇\" : (result.n_RankMedal === 2 ? \"🥈\" : (result.n_RankMedal === 3 ? \"🥉\" : result.n_RankMedal))\n    const lng = result.geojson ? result.geojson.lng : \"\"\n    const lat = result.geojson ? result.geojson.lat : \"\"\n    return (\n      <div className=\"athlete--card media rounded mb-3 p-2 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h5 className=\"mt-0\">{medal} {name}</h5>\n          <p className=\"mb-0\">\n            {result.c_EventGender} { result.c_Sportname}, {result.c_CompetitionName}<br/>\n            <small className=\"text-muted\">\n              {result.c_PhaseCity} {result.c_PhaseCountry}<br/>\n              {formattedDate}<br/>\n              Lat: {lat} | Lng: {lng}\n            </small>\n          </p>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteCard;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteDetailCard.scss'\n\nclass AthleteDetailCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {  }\n  }\n  render() {\n    const { selectedResult, onClick } = this.props\n    const formattedDate = format(parse(selectedResult.d_PhaseDate), 'D MMMM YYYY')\n    const name = selectedResult.c_Person === null ? `Team ${selectedResult.c_Team}` : selectedResult.c_Person\n    const medal = selectedResult.n_RankMedal === 1 ? \"🥇\" : (selectedResult.n_RankMedal === 2 ? \"🥈\" : (selectedResult.n_RankMedal === 3 ? \"🥉\" : selectedResult.n_RankMedal))\n    const result = selectedResult.c_Result !== null ? (<div><dt>Result ({selectedResult.c_ResultType})</dt><dd>{selectedResult.c_Result}</dd></div>) : null\n    return (\n      <div className=\"athlete--detail--card media rounded mb-3 p-3 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h3 className=\"my-3\">{name}</h3>\n          <dl>\n            <dt>Rank</dt>\n            <dd className=\"display-4\">{medal}</dd>\n            <dt>Sport</dt>\n            <dd>{selectedResult.c_EventGender} { selectedResult.c_Sportname}</dd>\n            <dt>Date</dt>\n            <dd>{formattedDate} {selectedResult.n_PersonAgeYears ? `(${selectedResult.n_PersonAgeYears} years old)` : ''}</dd>\n            <dt>Competition</dt>\n            <dd>{selectedResult.c_CompetitionName}</dd>\n            <dt>Location</dt>\n            <dd>{selectedResult.c_PhaseCity} {selectedResult.c_PhaseCountry}</dd>\n            {result}\n          </dl>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteDetailCard","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport AthleteCard from './AthleteCard'\nimport AthleteDetailCard from './AthleteDetailCard'\nimport './AthleteList.scss'\n\nclass AthleteList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewDetails: false\n    }\n  }\n\n  onClickAthleteCard(result) {\n    const { onSelectResult, setGlobeStatus } = this.props\n    this.setState({ viewDetails: true })\n    onSelectResult(result)\n    setGlobeStatus({ spinning: false })\n  }\n\n  onCloseDetail() {\n    const { setGlobeStatus } = this.props\n    this.setState({ viewDetails: false })\n    setGlobeStatus({ spinning: true })\n  }\n\n  render() {\n    const _this = this\n    const { phaseResults, selectedResult } = this.props\n    const athleteCards = phaseResults.map( r => <AthleteCard key={r.n_PhaseResultID} result={r} onClick={() => _this.onClickAthleteCard(r)} /> )\n    const heading = phaseResults.length > 0 ? `${phaseResults.length} results` : 'Loading ...'\n\n    const cssClass = this.state.viewDetails ? 'athlete--list--container athlete--list--container__detailed' : 'athlete--list--container'\n    return (\n      <div className={cssClass}>\n        <div className=\"athlete--list p-3\">\n          <h3 className=\"my-3\">{heading}</h3>\n          {athleteCards}\n        </div>\n        <AthleteDetailCard selectedResult={selectedResult} onClick={() => _this.onCloseDetail()} />\n      </div>\n    );\n  }\n}\n\nAthleteList.propTypes = {\n  phaseResults: PropTypes.array.isRequired\n}\n\nexport default AthleteList","import React, { Component } from 'react'\nimport Globe from './Globe/Globe'\nimport AthleteList from './AthleteList/AthleteList'\nimport '../vendors/stylesheets/bootstrap/bootstrap.scss'\nimport './App.scss'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.loaded === false) {\n      this.props.fetchApscData()\n      this.setState({ loaded: true })\n    }\n  }\n\n  render() {\n    const { phaseResults, selectedResult, onSelectResult, globeStatus, setGlobeStatus } = this.props\n    return (\n      <div className=\"container-fluid p-0\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-sm-9 col-lg-10\">\n            <Globe phaseResults={phaseResults} selectedResult={selectedResult} globeStatus={globeStatus} />\n          </div>\n          <div className=\"col-sm-3 col-lg-2\">\n            <AthleteList phaseResults={phaseResults} selectedResult={selectedResult} onSelectResult={onSelectResult} setGlobeStatus={setGlobeStatus}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { fetchApscData, selectYear, selectResult, setGlobeStatus } from '../actions';\nimport App from '../components/App';\n\n// const filterStatsByYear = (data, year, metricArray) => {\n//   const filteredData = {};\n//   _.each(metricArray, metricName => {\n//     if (data.hasOwnProperty(metricName)) {\n//       filteredData[metricName] = data[metricName].filter(d => d.year === year);\n//     }\n//   });\n\n//   return Object.assign({}, data, filteredData);\n// };\n\n// const getAvailableYears = (data) => {\n//   if (data.hasOwnProperty('gender')) {\n//     const grouped = _.groupBy(data.gender, 'year');\n//     return Object.keys(grouped).sort().reverse();\n//   }\n//   return [];\n// };\n\nconst mapStateToProps = state => {\n  return {\n    phaseResults: state.phaseResults,\n    selectedResult: state.selectedResult,\n    globeStatus: state.globeStatus\n    // sections: state.sections,\n    // apscData: filterStatsByYear(state.apscData, state.selectedYear, ['classification', 'gender', 'age']),\n    // selectedYear: state.selectedYear,\n    // availableYears: getAvailableYears(state.apscData)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApscData: () => {\n      dispatch(fetchApscData());\n    },\n    onYearChange: selectedYear => {\n      dispatch(selectYear(selectedYear));\n    },\n    onSelectResult: result => {\n      dispatch(selectResult(result))\n    },\n    setGlobeStatus: newStatus => {\n      dispatch(setGlobeStatus(newStatus))\n    }\n  };\n};\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default AppContainer;\n","import fetch from 'isomorphic-fetch'\nimport * as types from '../constants/ActionTypes'\nimport countries from '../assets/data/countries.json'\nimport cities from 'cities.json'\n\nexport const searchTerm = (text) => ({\n  type: types.SEARCH_TERM,\n  text\n})\n\nexport const showSection = (sectionName) => ({\n  type: types.SHOW_SECTION,\n  sectionName\n})\n\nexport const requestApscData = () => ({\n  type: types.REQUEST_APSC_DATA,\n})\n\nexport const receiveApscData = (json) => ({\n  type: types.RECEIVE_APSC_DATA,\n  json\n})\n\nexport const fetchApscData = () => {\n  const requestUrl = `https://another-quang.github.io/build/assets/phaseresults.json`;\n  return dispatch => {\n    dispatch(requestApscData());\n    return fetch(requestUrl)\n      .then(response => {\n        return response.json()\n      })\n      .then(json => {\n        const results = [];\n        if (json.length > 5) {\n          const subset = json.slice(0, 20)\n          subset.forEach(r => {\n            let geojson = cities.find(c => c.name === r.c_PhaseCity)\n            if (typeof(geojson) === 'undefined') {\n              // console.log(r)\n              geojson = countries.find(c => c.Country === r.c_PhaseCountry)\n            }\n            // const geojson = countries.find(c => c.Country === r.c_PhaseCountry)\n            results.push(Object.assign({}, r, { geojson: geojson }));\n          })\n        }\n        dispatch(receiveApscData(results))\n      })\n  }\n}\n\nexport const selectYear = selectedYear => ({\n  type: types.SELECT_YEAR,\n  selectedYear\n})\n\nexport const selectResult = selectedResult => ({\n  type: types.SELECT_RESULT,\n  selectedResult\n})\n\nexport const setGlobeStatus = newStatus => ({\n  type: types.SET_GLOBE_STATUS,\n  newStatus\n})\n","export const SEARCH_TERM = 'SEARCH_TERM';\nexport const SHOW_SECTION = 'SHOW_SECTION';\nexport const REQUEST_APSC_DATA = 'REQUEST_APSC_DATA';\nexport const RECEIVE_APSC_DATA = 'RECEIVE_APSC_DATA';\nexport const SELECT_YEAR = 'SELECT_YEAR';\nexport const SELECT_RESULT = 'SELECT_RESULT';\nexport const SET_GLOBE_STATUS = 'SET_GLOBE_STATUS';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RECEIVE_APSC_DATA } from '../constants/ActionTypes'\n\nconst initialState = []\n\nconst phaseResults = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_APSC_DATA: {\n      return action.json\n    }\n    default:\n      return state\n  }\n};\n\nexport default phaseResults\n","import { SELECT_RESULT } from '../constants/ActionTypes'\n\nconst initialState = {}\n\nconst selectedResult = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RESULT: {\n      return Object.assign({}, state, action.selectedResult)\n    }\n    default:\n      return state\n  }\n};\n\nexport default selectedResult\n","import { SET_GLOBE_STATUS } from '../constants/ActionTypes'\n\nconst initialState = {\n  spinning: true\n}\n\nconst globeStatus = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GLOBE_STATUS: {\n      return Object.assign({}, state, action.newStatus)\n    }\n    default:\n      return state\n  }\n};\n\nexport default globeStatus\n","import { combineReducers } from 'redux'\nimport phaseResults from './phaseResults'\nimport selectedResult from './selectedResult'\nimport globeStatus from './globeStatus'\n\nconst rootReducer = combineReducers({\n  phaseResults,\n  selectedResult,\n  globeStatus\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middlewares = process.env.NODE_ENV === 'production' ? [thunk, promise] : [thunk, promise, createLogger()];\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middlewares)\n  );\n\n  return store;\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport AppContainer from './containers/AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nlet initialState = {};\nconst store = configureStore(initialState);\nrender(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}