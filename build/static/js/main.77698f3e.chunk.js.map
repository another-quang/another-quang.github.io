{"version":3,"sources":["components/Globe/CircleLineGeometry.js","components/Globe/Pulse.js","components/Globe/MyGlobe.js","components/Globe/Globe.js","components/AthleteList/AthleteCard.js","components/AthleteList/AthleteDetailCard.js","components/AthleteList/AthleteList.js","components/App.js","containers/AppContainer.js","actions/index.js","constants/ActionTypes.js","serviceWorker.js","reducers/phaseResults.js","reducers/selectedResult.js","reducers/globeStatus.js","reducers/index.js","store/configureStore.js","index.js"],"names":["CircleLineGeometry","radius","segments","thetaStart","thetaLength","args","Math","PI","geometry","THREE","delta","i","angle","x","cos","y","sin","vertices","push","Pulse","color","duration","arguments","length","undefined","autoStart","call","this","discColor","lineColor","discGeometry","discMaterial","side","transparent","opacity","disc","add","lineGeometry","lineMaterial","linewidth","line","start","prototype","Object","assign","create","constructor","started","Date","stop","update","percentElapsed","floor","scale","set","material","MyGlobe","classCallCheck","renderer","scene","container","camera","object","controls","fov","altitude","globeProps","globeRadius","widthSegments","heightSegments","globeGroup","circleGroup","visibleResults","_this2","_this","document","getElementById","WIDTH","clientWidth","HEIGHT","clientHeight","setSize","position","lookAt","OrbitControls","autoRotate","autoRotateSpeed","background","appendChild","domElement","ambientLight","spotLight","load","texture","sphere","map","mesh","render","requestAnimationFrame","children","forEach","c","centerDistance","distanceTo","TWEEN","globeStatus","spinning","selectedResult","geojson","_selectedResult$geojs","lat","lng","target","calculate3dCoordinates","coeff","from","z","to","easing","Quartic","Out","onUpdate","copy","phaseResults","element","addCircle","center","randFloat","medalColor","n_RankMedal","pulse","name","n_PhaseResultID","random","startPoint","endPoint","circleGeometry","circleMaterial","phi","parseInt","theta","Globe","props","possibleConstructorReturn","getPrototypeOf","myGlobe","react_default","a","createElement","id","prevProps","_this$props","updatePhaseResults","rotateCamera","applyStatus","init","Component","AthleteCard","result","onClick","formattedDate","format","parse","d_PhaseDate","c_Person","concat","c_Team","medal","className","e","preventDefault","c_EventGender","c_Sportname","c_CompetitionName","c_PhaseCity","c_PhaseCountry","AthleteDetailCard","state","c_Result","c_ResultType","n_PersonAgeYears","AthleteList","viewDetails","onSelectResult","setGlobeStatus","setState","_this$props2","athleteCards","r","components_AthleteList_AthleteCard","key","onClickAthleteCard","heading","cssClass","components_AthleteList_AthleteDetailCard","onCloseDetail","App","loaded","fetchApscData","components_Globe_Globe","components_AthleteList_AthleteList","AppContainer","connect","dispatch","type","fetch","then","response","json","results","slice","cities","find","countries","Country","receiveApscData","onYearChange","selectedYear","selectYear","newStatus","Boolean","window","location","hostname","match","initialState","action","rootReducer","combineReducers","middlewares","thunk","promise","store","createStore","applyMiddleware","apply","es","containers_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.77698f3e.chunk.js","sourcesContent":["import * as THREE from 'three'\n\nexport default function CircleLineGeometry(radius, segments, thetaStart, thetaLength) {\n  const args = {\n    radius: radius || 50,\n    segments: segments || 8,\n    thetaStart: thetaStart || 0,\n    thetaLength: thetaLength || (2 * Math.PI),\n  };\n  const geometry = new THREE.Geometry();\n  const delta = ((args.thetaStart + args.thetaLength) - args.thetaStart) / args.segments;\n  for (let i = 0; i <= args.segments; i += 1) {\n    const angle = args.thetaStart + (delta * i);\n    const x = args.radius * Math.cos(angle);\n    const y = args.radius * Math.sin(angle);\n    geometry.vertices.push(new THREE.Vector3(x, y, 0));\n  }\n  return geometry;\n}\n","import * as THREE from 'three'\nimport CircleLineGeometry from './CircleLineGeometry'\n\nexport default function Pulse(radius, color, duration = 3000, autoStart = true) {\n  THREE.Object3D.call(this);\n\n  this.duration = duration;\n  const segments = 32;\n  const discColor = color;\n  const lineColor = color;\n\n  const discGeometry = new THREE.CircleGeometry(radius, segments);\n  const discMaterial = new THREE.MeshLambertMaterial({\n    side: THREE.DoubleSide,\n    color: discColor,\n    transparent: true,\n    opacity: 1,\n  });\n  this.disc = new THREE.Mesh(discGeometry, discMaterial);\n  this.add(this.disc);\n\n  const lineGeometry = new CircleLineGeometry(radius, segments);\n  const lineMaterial = new THREE.LineBasicMaterial({\n    color: lineColor,\n    linewidth: 1,\n    transparent: true,\n    opacity: 1,\n  });\n  this.line = new THREE.Line(lineGeometry, lineMaterial);\n  this.add(this.line);\n\n  if (autoStart) {\n    this.start();\n  }\n}\n\nPulse.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {\n\n  constructor: Pulse,\n\n  start() {\n    this.started = new Date();\n  },\n\n  stop() {\n    this.started = null;\n  },\n\n  update() {\n    if (!this.started) {\n      return;\n    }\n    const now = new Date();\n    const timeElapsed = now - this.started;\n    let percentElapsed = timeElapsed / this.duration;\n    if (percentElapsed >= 1) {\n      percentElapsed -= Math.floor(percentElapsed);\n    }\n\n    const opacity = 1 - percentElapsed;\n\n    let scale = percentElapsed <= 0 ? 0.001 : percentElapsed\n\n    // I was getting an error:\n    //  Matrix3.getInverse(): can't invert matrix, determinant is 0\n    //\n    // From SO:\n    //  Matrix3.getInverse(): can't invert matrix, determinant is 0\n    //  usually happens when either the scale.x, scale.y or scale.z are 0.\n    //  Make sure you're not scaling the object to 0.\n    //\n    // Ref:\n    //  http://stackoverflow.com/questions/19150120/scaling-an-object-in-three-js\n\n    this.scale.set(scale, scale, scale);\n    this.line.material.opacity = opacity;\n    this.disc.material.opacity = opacity * 0.15;\n  },\n\n});","import * as THREE from 'three'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport OrbitControls from 'threejs-orbit-controls'\nimport Pulse from './Pulse'\n\nclass MyGlobe {\n\tconstructor() {\n\t\tthis.renderer = new THREE.WebGLRenderer()\n\t\tthis.scene = new THREE.Scene()\n\t\t// this.containerId = containerId || \"my-globe\"\n\t\tthis.container = null\n\t\tthis.camera = {\n\t\t\tobject: null, // camera object\n\t\t\tcontrols: null, // orbitControls object\n\t\t\tfov: 60,\n\t\t\taltitude: 500\n\t\t}\n\n\t\tthis.globeProps = {\n\t\t\tglobeRadius: 200,\n\t\t\twidthSegments: 20,\n\t\t\theightSegments: 20\n\t\t}\n\n\t\tthis.globeGroup = new THREE.Group()\n\t\tthis.circleGroup = new THREE.Group()\n\t\tthis.visibleResults = []\n\t}\n\n\tinit() {\n\t\tconst _this = this\n\t\tthis.container = document.getElementById(\"my-globe\")\n\t\tconst WIDTH = this.container.clientWidth\n\t\tconst HEIGHT = this.container.clientHeight\n\n\t\t/** Renderer */\n\t\tthis.renderer.setSize(WIDTH, HEIGHT)\n\n\t\t/** Camera */\n\t\tthis.camera.object = new THREE.PerspectiveCamera(this.camera.fov, WIDTH / HEIGHT, 1, 10000)\n\t\tthis.camera.object.position.set(0, 200, this.camera.altitude)\n\t\tthis.camera.object.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.camera.controls = new OrbitControls(this.camera.object, this.container)\n\t\tthis.camera.controls.autoRotate = true\n\t\tthis.camera.controls.autoRotateSpeed = .5\n\t\t// this.camera.controls.enableZoom = false\n\n\t\t/** Scene */\n\t\tthis.scene.background = new THREE.Color( 0x000 )\n\t\tthis.scene.add(this.camera.object)\n\t\tthis.container.appendChild(this.renderer.domElement)\n\n\n\t\t/** Lighting */\n\t\tconst ambientLight = new THREE.AmbientLight(0x404040)\n\t\tthis.scene.add(ambientLight)\n\t\tconst spotLight = new THREE.PointLight(0xffffff);\n\t\tspotLight.position.set(500, 500, 500);\n\t\tthis.camera.object.add(spotLight);\n\n\t\t/** Objects in scene */\n\t\tconst loader = new THREE.TextureLoader()\n\t\tloader.load( 'https://another-quang.github.io/build/assets/night_2048.jpg', texture => {\n\t\t\tconst sphere = new THREE.SphereGeometry(this.globeProps.globeRadius, this.globeProps.widthSegments, this.globeProps.heightSegments)\n\t\t\tconst material = new THREE.MeshLambertMaterial({\n\t\t\t\tmap: texture,\n\t\t\t\t// color: 0xffffff,\n\t\t\t\t// wireframe: true\n\t\t\t})\n\t\t\tconst mesh = new THREE.Mesh(sphere, material)\n\t\t\tthis.globeGroup.add(mesh)\n\t\t})\n\t\tthis.scene.add(this.globeGroup)\n\t\tthis.scene.add(this.circleGroup)\n\t\t// this.globeGroup.add(new THREE.AxesHelper(1000))\n\t\t// this.globeGroup.add(new THREE.GridHelper(1000, 10, 0x0000ff, 0x808080))\n\n\t\t/** Animation */\n\t\tfunction render () {\n\t\t\trequestAnimationFrame(render)\n\n\t\t\t_this.circleGroup.children.forEach(c => {\n\t\t\t\tconst centerDistance = _this.camera.object.position.distanceTo(new THREE.Vector3(0, 0, 0))\n\t\t\t\tconst objectDistance = _this.camera.object.position.distanceTo(c.position)\n\t\t\t\tif (objectDistance < centerDistance) {\n\t\t\t\t\tc.update()\n\t\t\t\t}\n\t\t\t})\n\t\t\tTWEEN.update()\n\t\t\t_this.camera.controls.update()\n\t\t\t_this.renderer.render(_this.scene, _this.camera.object)\n\t\t}\n\n\t\trender()\n\t}\n\n\tapplyStatus(globeStatus) {\n\t\tthis.camera.controls.autoRotate = globeStatus.spinning\n\t}\n\n\trotateCamera(selectedResult) {\n\t\tif (typeof(selectedResult.geojson) !== 'undefined') {\n\t\t\tconst _this = this\n\t\t\tthis.camera.controls.autoRotate = false\n\n\t\t\tconst { lat, lng } = selectedResult.geojson\n\t\t\tconst target = this.calculate3dCoordinates(lat, lng, this.globeProps.globeRadius)\n\n\t\t\tconst coeff = this.camera.altitude / this.globeProps.globeRadius\n\t\t\tlet from = {\n\t\t\t\tx: this.camera.object.position.x,\n\t\t\t\ty: this.camera.object.position.y,\n\t\t\t\tz: this.camera.object.position.z\n\t\t\t}\n\n\t\t\tconst to = {\n\t\t\t\tx: target.x * coeff,\n\t\t\t\ty: target.y * coeff,\n\t\t\t\tz: target.z * coeff\n\t\t\t}\n\n\t\t\treturn new TWEEN.Tween(from)\n\t\t\t\t.to(to, 3000)\n\t\t\t\t.easing(TWEEN.Easing.Quartic.Out)\n\t\t\t\t.onUpdate(() => {\n\t\t\t\t\t_this.camera.object.position.copy(from);\n\t\t\t\t\t_this.camera.object.lookAt(new THREE.Vector3(0, 0, 0));\n\t\t\t\t})\n\t\t\t\t.start()\n\t\t}\n\t}\n\n\tupdatePhaseResults(phaseResults) {\n\t\tvar _this = this\n\t\tphaseResults.forEach(element => {\n\t\t\tif (typeof(element.geojson) !== 'undefined'){\n\t\t\t\t_this.addCircle(element)\n\t\t\t}\n\t\t})\n\t}\n\n\taddCircle(element) {\n\t\tconst center = this.calculate3dCoordinates(element.geojson.lat + THREE.Math.randFloat(-2, 2), element.geojson.lng + THREE.Math.randFloat(-2, 2), this.globeProps.globeRadius)\n\t\tconst medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst radius = THREE.Math.randFloat(5, 10)\n\t\tlet pulse = new Pulse(radius, medalColor)\n\t\tpulse.name = element.n_PhaseResultID\n\t\tpulse.position.copy(center)\n\t\tpulse.lookAt(new THREE.Vector3(0, 0, 0))\n\t\tthis.circleGroup.add(pulse)\n\t}\n\n\taddMarker(element) {\n\t\tvar _this = this\n\t\tconst coeff = 1 + Math.random() * .2 //this.camera.altitude / this.globeProps.globeRadius\n\n\t\tconst startPoint = _this.calculate3dCoordinates(element.geojson.lat, element.geojson.lng, this.globeProps.globeRadius)\n\t\tconst endPoint = new THREE.Vector3(startPoint.x * coeff, startPoint.y * coeff, (startPoint.z + Math.random() * 5) * coeff)\n\n\t\tconst geometry = new THREE.Geometry()\n\t\tgeometry.vertices.push(startPoint, endPoint)\n\t\tconst medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst lineMaterial = new THREE.LineBasicMaterial({\n\t\t\tcolor: medalColor\n\t\t})\n\n\t\tconst line = new THREE.Line(geometry, lineMaterial)\n\t\t_this.globeGroup.add(line)\n\n\t\tconst circleGeometry = new THREE.SphereGeometry(2, 20, 20)\n\t\t// const medalColor = element.n_RankMedal === 1 ? 0xffff00 : (element.n_RankMedal === 2 ? 0xC0C0C0 : 0xCD7F32)\n\t\tconst circleMaterial = new THREE.MeshPhongMaterial({\n\t\t\tcolor: medalColor\n\t\t})\n\t\tconst mesh = new THREE.Mesh(circleGeometry, circleMaterial)\n\t\tmesh.position.copy(endPoint)\n\t\t_this.globeGroup.add(mesh)\n\t}\n\n\tcalculate3dCoordinates(lat, lng, radius) {\n\t\tconst phi   = (90 - parseInt(lat, 10)) * (Math.PI / 180)\n\t\tconst theta = (parseInt(lng, 10) + 180) * (Math.PI / 180)\n\t\tconst x = -((radius) * Math.sin(phi) * Math.cos(theta))\n\t\tconst z = ((radius) * Math.sin(phi) * Math.sin(theta))\n\t\tconst y = ((radius) * Math.cos(phi))\n\n\t\treturn new THREE.Vector3(x, y, z)\n\t}\n}\n\nexport default MyGlobe","import React, { Component } from 'react'\nimport MyGlobe from './MyGlobe'\nimport './Globe.scss'\n\nclass Globe extends Component {\n  constructor(props) {\n    super(props);\n    this.myGlobe = new MyGlobe()\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"my-globe\"></div>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { phaseResults, selectedResult, globeStatus } = this.props\n    if (typeof(prevProps.phaseResults[0]) !== 'undefined') {\n      if (prevProps.phaseResults[0].n_PhaseResultID !== phaseResults[0].n_PhaseResultID) {\n        this.myGlobe.updatePhaseResults(phaseResults)\n      }\n    } else {\n      this.myGlobe.updatePhaseResults(phaseResults)\n    }\n    if (globeStatus.spinning === false) {\n      this.myGlobe.rotateCamera(selectedResult)\n    }\n    this.myGlobe.applyStatus(globeStatus)\n  }\n\n  componentDidMount() {\n    this.myGlobe.init()\n  }\n}\n\nexport default Globe;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteCard.scss'\n\nclass AthleteCard extends Component {\n  render() {\n    const { result, onClick } = this.props\n    const formattedDate = format(parse(result.d_PhaseDate), 'D MMMM YYYY')\n    const name = result.c_Person === null ? `Team ${result.c_Team}` : result.c_Person\n    const medal = result.n_RankMedal === 1 ? \"🥇\" : (result.n_RankMedal === 2 ? \"🥈\" : (result.n_RankMedal === 3 ? \"🥉\" : result.n_RankMedal))\n    const lng = result.geojson ? result.geojson.lng : \"\"\n    const lat = result.geojson ? result.geojson.lat : \"\"\n    return (\n      <div className=\"athlete--card media rounded mb-3 p-2 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h5 className=\"mt-0\">{medal} {name}</h5>\n          <p className=\"mb-0\">\n            {result.c_EventGender} { result.c_Sportname}, {result.c_CompetitionName}<br/>\n            <small className=\"text-muted\">\n              {result.c_PhaseCity} {result.c_PhaseCountry}<br/>\n              {formattedDate}<br/>\n              Lat: {lat} | Lng: {lng}\n            </small>\n          </p>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteCard;","import React, { Component } from 'react'\nimport {format, parse} from 'date-fns'\nimport './AthleteDetailCard.scss'\n\nclass AthleteDetailCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {  }\n  }\n  render() {\n    const { selectedResult, onClick } = this.props\n    const formattedDate = format(parse(selectedResult.d_PhaseDate), 'D MMMM YYYY')\n    const name = selectedResult.c_Person === null ? `Team ${selectedResult.c_Team}` : selectedResult.c_Person\n    const medal = selectedResult.n_RankMedal === 1 ? \"🥇\" : (selectedResult.n_RankMedal === 2 ? \"🥈\" : (selectedResult.n_RankMedal === 3 ? \"🥉\" : selectedResult.n_RankMedal))\n    const result = selectedResult.c_Result !== null ? (<div><dt>Result ({selectedResult.c_ResultType})</dt><dd>{selectedResult.c_Result}</dd></div>) : null\n    return (\n      <div className=\"athlete--detail--card media rounded mb-3 p-3 pb-0\" onClick={e => {e.preventDefault();onClick();}}>\n        <div className=\"media-body\">\n          <h3 className=\"my-3\">{name}</h3>\n          <dl>\n            <dt>Rank</dt>\n            <dd className=\"display-4\">{medal}</dd>\n            <dt>Sport</dt>\n            <dd>{selectedResult.c_EventGender} { selectedResult.c_Sportname}</dd>\n            <dt>Date</dt>\n            <dd>{formattedDate} {selectedResult.n_PersonAgeYears ? `(${selectedResult.n_PersonAgeYears} years old)` : ''}</dd>\n            <dt>Competition</dt>\n            <dd>{selectedResult.c_CompetitionName}</dd>\n            <dt>Location</dt>\n            <dd>{selectedResult.c_PhaseCity} {selectedResult.c_PhaseCountry}</dd>\n            {result}\n          </dl>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AthleteDetailCard","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport AthleteCard from './AthleteCard'\nimport AthleteDetailCard from './AthleteDetailCard'\nimport './AthleteList.scss'\n\nclass AthleteList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      viewDetails: false\n    }\n  }\n\n  onClickAthleteCard(result) {\n    const { onSelectResult, setGlobeStatus } = this.props\n    this.setState({ viewDetails: true })\n    onSelectResult(result)\n    setGlobeStatus({ spinning: false })\n  }\n\n  onCloseDetail() {\n    const { setGlobeStatus } = this.props\n    this.setState({ viewDetails: false })\n    setGlobeStatus({ spinning: true })\n  }\n\n  render() {\n    const _this = this\n    const { phaseResults, selectedResult } = this.props\n    const athleteCards = phaseResults.map( r => <AthleteCard key={r.n_PhaseResultID} result={r} onClick={() => _this.onClickAthleteCard(r)} /> )\n    const heading = phaseResults.length > 0 ? `${phaseResults.length} results` : 'Loading ...'\n\n    const cssClass = this.state.viewDetails ? 'athlete--list--container athlete--list--container__detailed' : 'athlete--list--container'\n    return (\n      <div className={cssClass}>\n        <div className=\"athlete--list p-3\">\n          <h3 className=\"my-3\">{heading}</h3>\n          {athleteCards}\n        </div>\n        <AthleteDetailCard selectedResult={selectedResult} onClick={() => _this.onCloseDetail()} />\n      </div>\n    );\n  }\n}\n\nAthleteList.propTypes = {\n  phaseResults: PropTypes.array.isRequired\n}\n\nexport default AthleteList","import React, { Component } from 'react'\nimport Globe from './Globe/Globe'\nimport AthleteList from './AthleteList/AthleteList'\nimport '../vendors/stylesheets/bootstrap/bootstrap.scss'\nimport './App.scss'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.loaded === false) {\n      this.props.fetchApscData()\n      this.setState({ loaded: true })\n    }\n  }\n\n  render() {\n    const { phaseResults, selectedResult, onSelectResult, globeStatus, setGlobeStatus } = this.props\n    return (\n      <div className=\"container-fluid p-0\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-sm-9 col-lg-10\">\n            <Globe phaseResults={phaseResults} selectedResult={selectedResult} globeStatus={globeStatus} />\n          </div>\n          <div className=\"col-sm-3 col-lg-2\">\n            <AthleteList phaseResults={phaseResults} selectedResult={selectedResult} onSelectResult={onSelectResult} setGlobeStatus={setGlobeStatus}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { fetchApscData, selectYear, selectResult, setGlobeStatus } from '../actions';\nimport App from '../components/App';\n\n// const filterStatsByYear = (data, year, metricArray) => {\n//   const filteredData = {};\n//   _.each(metricArray, metricName => {\n//     if (data.hasOwnProperty(metricName)) {\n//       filteredData[metricName] = data[metricName].filter(d => d.year === year);\n//     }\n//   });\n\n//   return Object.assign({}, data, filteredData);\n// };\n\n// const getAvailableYears = (data) => {\n//   if (data.hasOwnProperty('gender')) {\n//     const grouped = _.groupBy(data.gender, 'year');\n//     return Object.keys(grouped).sort().reverse();\n//   }\n//   return [];\n// };\n\nconst mapStateToProps = state => {\n  return {\n    phaseResults: state.phaseResults,\n    selectedResult: state.selectedResult,\n    globeStatus: state.globeStatus\n    // sections: state.sections,\n    // apscData: filterStatsByYear(state.apscData, state.selectedYear, ['classification', 'gender', 'age']),\n    // selectedYear: state.selectedYear,\n    // availableYears: getAvailableYears(state.apscData)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApscData: () => {\n      dispatch(fetchApscData());\n    },\n    onYearChange: selectedYear => {\n      dispatch(selectYear(selectedYear));\n    },\n    onSelectResult: result => {\n      dispatch(selectResult(result))\n    },\n    setGlobeStatus: newStatus => {\n      dispatch(setGlobeStatus(newStatus))\n    }\n  };\n};\n\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default AppContainer;\n","import fetch from 'isomorphic-fetch'\nimport * as types from '../constants/ActionTypes'\nimport countries from '../assets/data/countries.json'\nimport cities from 'cities.json'\n\nexport const searchTerm = (text) => ({\n  type: types.SEARCH_TERM,\n  text\n})\n\nexport const showSection = (sectionName) => ({\n  type: types.SHOW_SECTION,\n  sectionName\n})\n\nexport const requestApscData = () => ({\n  type: types.REQUEST_APSC_DATA,\n})\n\nexport const receiveApscData = (json) => ({\n  type: types.RECEIVE_APSC_DATA,\n  json\n})\n\nexport const fetchApscData = () => {\n  const requestUrl = `https://another-quang.github.io/build/assets/phaseresults.json`;\n  return dispatch => {\n    dispatch(requestApscData());\n    return fetch(requestUrl)\n      .then(response => {\n        return response.json()\n      })\n      .then(json => {\n        const results = [];\n        if (json.length > 5) {\n          const subset = json.slice(0, 20)\n          subset.forEach(r => {\n            let geojson = cities.find(c => c.name === r.c_PhaseCity)\n            if (typeof(geojson) === 'undefined') {\n              // console.log(r)\n              geojson = countries.find(c => c.Country === r.c_PhaseCountry)\n            }\n            // const geojson = countries.find(c => c.Country === r.c_PhaseCountry)\n            results.push(Object.assign({}, r, { geojson: geojson }));\n          })\n        }\n        dispatch(receiveApscData(results))\n      })\n  }\n}\n\nexport const selectYear = selectedYear => ({\n  type: types.SELECT_YEAR,\n  selectedYear\n})\n\nexport const selectResult = selectedResult => ({\n  type: types.SELECT_RESULT,\n  selectedResult\n})\n\nexport const setGlobeStatus = newStatus => ({\n  type: types.SET_GLOBE_STATUS,\n  newStatus\n})\n","export const SEARCH_TERM = 'SEARCH_TERM';\nexport const SHOW_SECTION = 'SHOW_SECTION';\nexport const REQUEST_APSC_DATA = 'REQUEST_APSC_DATA';\nexport const RECEIVE_APSC_DATA = 'RECEIVE_APSC_DATA';\nexport const SELECT_YEAR = 'SELECT_YEAR';\nexport const SELECT_RESULT = 'SELECT_RESULT';\nexport const SET_GLOBE_STATUS = 'SET_GLOBE_STATUS';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RECEIVE_APSC_DATA } from '../constants/ActionTypes'\n\nconst initialState = []\n\nconst phaseResults = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_APSC_DATA: {\n      return action.json\n    }\n    default:\n      return state\n  }\n};\n\nexport default phaseResults\n","import { SELECT_RESULT } from '../constants/ActionTypes'\n\nconst initialState = {}\n\nconst selectedResult = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_RESULT: {\n      return Object.assign({}, state, action.selectedResult)\n    }\n    default:\n      return state\n  }\n};\n\nexport default selectedResult\n","import { SET_GLOBE_STATUS } from '../constants/ActionTypes'\n\nconst initialState = {\n  spinning: true\n}\n\nconst globeStatus = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GLOBE_STATUS: {\n      return Object.assign({}, state, action.newStatus)\n    }\n    default:\n      return state\n  }\n};\n\nexport default globeStatus\n","import { combineReducers } from 'redux'\nimport phaseResults from './phaseResults'\nimport selectedResult from './selectedResult'\nimport globeStatus from './globeStatus'\n\nconst rootReducer = combineReducers({\n  phaseResults,\n  selectedResult,\n  globeStatus\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst middlewares = process.env.NODE_ENV === 'production' ? [thunk, promise] : [thunk, promise, createLogger()];\n\nexport default function configureStore(initialState) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middlewares)\n  );\n\n  return store;\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport AppContainer from './containers/AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nlet initialState = {};\nconst store = configureStore(initialState);\nrender(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}